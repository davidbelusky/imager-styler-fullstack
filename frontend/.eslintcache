[{"/home/user/Desktop/image_styler/frontend/src/index.js":"1","/home/user/Desktop/image_styler/frontend/src/App.js":"2","/home/user/Desktop/image_styler/frontend/src/reportWebVitals.js":"3","/home/user/Desktop/image_styler/frontend/src/components/Main.js":"4","/home/user/Desktop/image_styler/frontend/src/components/StylerApp/StylerApp.js":"5","/home/user/Desktop/image_styler/frontend/src/components/StylerApp/Confirm.js":"6","/home/user/Desktop/image_styler/frontend/src/components/StylerApp/Result.js":"7","/home/user/Desktop/image_styler/frontend/src/components/Navbar/NavBar.js":"8","/home/user/Desktop/image_styler/frontend/src/components/BodyMain/BodyMain.js":"9","/home/user/Desktop/image_styler/frontend/src/components/StylerApp/Features/DragnDrop.js":"10","/home/user/Desktop/image_styler/frontend/src/components/Navbar/NavBarItem.js":"11","/home/user/Desktop/image_styler/frontend/src/constants.js":"12","/home/user/Desktop/image_styler/frontend/src/variants.js":"13","/home/user/Desktop/image_styler/frontend/src/components/Trying.js":"14","/home/user/Desktop/image_styler/frontend/src/components/RegisterModal/RegisterModal.js":"15","/home/user/Desktop/image_styler/frontend/src/components/RegisterModal/RegisterForm.js":"16","/home/user/Desktop/image_styler/frontend/src/components/UserActivation/UserActivation.js":"17","/home/user/Desktop/image_styler/frontend/src/components/LoginModal/LoginModal.js":"18","/home/user/Desktop/image_styler/frontend/src/components/LoginModal/LoginForm.js":"19","/home/user/Desktop/image_styler/frontend/src/axiosTokenHandle.js":"20","/home/user/Desktop/image_styler/frontend/src/components/Gallery/Gallery.js":"21","/home/user/Desktop/image_styler/frontend/src/redux/reducers/index.js":"22","/home/user/Desktop/image_styler/frontend/src/redux/reducers/logged.js":"23","/home/user/Desktop/image_styler/frontend/src/redux/actions/index.js":"24","/home/user/Desktop/image_styler/frontend/src/redux/reducers/openLoginDialog.js":"25","/home/user/Desktop/image_styler/frontend/src/components/Gallery/AddImageModal.js":"26","/home/user/Desktop/image_styler/frontend/src/components/Gallery/AddImageForm.js":"27","/home/user/Desktop/image_styler/frontend/src/components/Gallery/GalleryCard.js":"28","/home/user/Desktop/image_styler/frontend/src/components/Gallery/ModalHelpers/DeleteModal.js":"29","/home/user/Desktop/image_styler/frontend/src/components/StylerApp/Features/GalleryImageModal/GallerySelectModal.js":"30","/home/user/Desktop/image_styler/frontend/src/components/StylerApp/Features/GalleryImageModal/GalleryImagesModal.js":"31","/home/user/Desktop/image_styler/frontend/src/components/StylerApp/Features/GalleryImageModal/GalleryImageModal.js":"32","/home/user/Desktop/image_styler/frontend/src/requests/getImages.js":"33"},{"size":1378,"mtime":1610293320646,"results":"34","hashOfConfig":"35"},{"size":1212,"mtime":1611428275099,"results":"36","hashOfConfig":"35"},{"size":362,"mtime":1608163087752,"results":"37","hashOfConfig":"35"},{"size":439,"mtime":1610284719071,"results":"38","hashOfConfig":"35"},{"size":6306,"mtime":1611510079371,"results":"39","hashOfConfig":"35"},{"size":846,"mtime":1609604801850,"results":"40","hashOfConfig":"35"},{"size":1490,"mtime":1611506193840,"results":"41","hashOfConfig":"35"},{"size":4444,"mtime":1611506188620,"results":"42","hashOfConfig":"35"},{"size":2844,"mtime":1611427629035,"results":"43","hashOfConfig":"35"},{"size":910,"mtime":1611509431787,"results":"44","hashOfConfig":"35"},{"size":772,"mtime":1610297531590,"results":"45","hashOfConfig":"35"},{"size":79,"mtime":1608819651043,"results":"46","hashOfConfig":"35"},{"size":676,"mtime":1608937668042,"results":"47","hashOfConfig":"35"},{"size":711,"mtime":1608932398305,"results":"48","hashOfConfig":"35"},{"size":1606,"mtime":1609682683058,"results":"49","hashOfConfig":"35"},{"size":4166,"mtime":1610399567422,"results":"50","hashOfConfig":"35"},{"size":1792,"mtime":1611506204680,"results":"51","hashOfConfig":"35"},{"size":1826,"mtime":1610297054987,"results":"52","hashOfConfig":"35"},{"size":4168,"mtime":1611506182364,"results":"53","hashOfConfig":"35"},{"size":1824,"mtime":1611506162840,"results":"54","hashOfConfig":"35"},{"size":2026,"mtime":1611506793800,"results":"55","hashOfConfig":"35"},{"size":274,"mtime":1610296956706,"results":"56","hashOfConfig":"35"},{"size":248,"mtime":1610293782126,"results":"57","hashOfConfig":"35"},{"size":388,"mtime":1610296582313,"results":"58","hashOfConfig":"35"},{"size":286,"mtime":1610296504565,"results":"59","hashOfConfig":"35"},{"size":2503,"mtime":1611506176624,"results":"60","hashOfConfig":"35"},{"size":7732,"mtime":1611506746412,"results":"61","hashOfConfig":"35"},{"size":1957,"mtime":1611508477192,"results":"62","hashOfConfig":"35"},{"size":2222,"mtime":1611423740120,"results":"63","hashOfConfig":"35"},{"size":2089,"mtime":1611509698275,"results":"64","hashOfConfig":"35"},{"size":1109,"mtime":1611509813615,"results":"65","hashOfConfig":"35"},{"size":1053,"mtime":1611510217552,"results":"66","hashOfConfig":"35"},{"size":446,"mtime":1611507864525,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"71"},"2yq4p8",{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"71"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"71"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"71"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"71"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"71"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"71"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"71"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"71"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"71"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"71"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/user/Desktop/image_styler/frontend/src/index.js",["146"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport axios from 'axios'\nimport {API_URL} from './constants'\nimport {createStore} from 'redux'\nimport allReducers from './redux/reducers'\nimport { Provider } from 'react-redux'\n\n\nconst store = createStore(\n  allReducers,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n\naxios.defaults.headers.common['Authorization'] = 'Bearer ' + localStorage.getItem('token')\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: '#fff',\n      main: '#fff',\n      dark: '#00c400',\n      contrastText: '#000',\n    },\n    secondary: {\n      light: '#6a6a6a',\n      main: '#d3d3d3',\n      dark: '#f2f2f2',\n      contrastText: '#000',\n    },\n\n  },\n\n  // Override after focus text input label text stay black color\n  overrides: {\n    MuiFormLabel: {\n      root: {\n        \"&$focused\": {\n          color: \"black\",\n        }\n      }, \n      \n      focused: {}\n    }\n  }\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n",["147","148"],"/home/user/Desktop/image_styler/frontend/src/App.js",[],"/home/user/Desktop/image_styler/frontend/src/reportWebVitals.js",[],"/home/user/Desktop/image_styler/frontend/src/components/Main.js",["149"],"import React from 'react'\nimport NavBar from \"./Navbar/NavBar\"\nimport BodyMain from \"./BodyMain/BodyMain\"\nimport { mainAnimate } from \"../variants\"\nimport { motion } from 'framer-motion'\n\n\nexport default function Main() {\n\n\n    return (\n        <motion.div\n            variants={mainAnimate}\n            initial=\"hidden\"\n            animate=\"show\"\n            exit=\"hidden\"\n        >\n            <BodyMain />\n        </motion.div>\n    )\n}\n","/home/user/Desktop/image_styler/frontend/src/components/StylerApp/StylerApp.js",["150","151","152"],"/home/user/Desktop/image_styler/frontend/src/components/StylerApp/Confirm.js",["153","154","155"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport plusImg from '../../images/static/plus.png'\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    confirmLayout: {\n        width: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        \"& img\": {\n            marginBottom:\"2rem\",\n\n        }\n    },\n  }));\n\n\nfunction Confirm(props) {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.confirmLayout}>\n            <img style={{maxWidth: \"300px\", maxHeight: \"180px\" ,borderRadius: \"4%\"}} src={props.file.url}/>\n            <img src={plusImg}/>\n            <img style={{maxWidth: \"300px\", maxHeight: \"180px\",borderRadius: \"4%\"}} src={props.fileStyle.url}/>\n        </div>\n    );\n}\n\nexport default Confirm;","/home/user/Desktop/image_styler/frontend/src/components/StylerApp/Result.js",["156"],"import React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\n\n\nconst useStyles = makeStyles((theme) => ({\n    resultLayout:{\n        display:\"flex\",\n        flexDirection:\"column\",\n        alignItems:\"center\",\n        height:\"100%\",\n        justifyContent:\"center\"\n    },\n  }));\n\nfunction Result(props) {\n    const classes = useStyles();\n\n    return (\n        <div style={{height: \"496px\"}}>\n            {props.resultImage ? (\n                <div className={classes.resultLayout}>\n                    <img style={{maxWidth: \"500px\", maxHeight: \"380px\",borderRadius: \"4%\"}} src={props.resultImage}/>\n                    <Typography style={{marginTop:\"2rem\"}} variant=\"h4\" component=\"h4\" color=\"primary\">\n                    <Link href={props.resultImage}>\n                        Link\n                    </Link>\n                    </Typography>\n                    \n                </div>\n                )\n            :(\n                <div className={classes.resultLayout}>\n                    <CircularProgress color=\"primary\" size=\"6rem\" />\n                    <Typography style={{marginTop:\"5rem\"}} variant=\"h4\" component=\"h4\" color=\"primary\">\n                        Styling\n                    </Typography>\n                </div>\n            )}\n\n        </div>\n    );\n}\n\nexport default Result;","/home/user/Desktop/image_styler/frontend/src/components/Navbar/NavBar.js",["157","158","159"],"import React, {useState,useEffect} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { MenuList } from '@material-ui/core';\nimport NavBarItem from \"./NavBarItem\"\nimport RegisterModal from \"../RegisterModal/RegisterModal\"\nimport LoginModal from \"../LoginModal/LoginModal\"\n\nimport {API_URL} from '../../constants'\nimport { useLocation } from 'react-router-dom'\nimport {axiosApiInstance,refreshAccessToken} from \"../../axiosTokenHandle\"\nimport { useSelector, useDispatch  } from 'react-redux'\nimport {LogIn, LogOut, OpenLoginDialog} from \"../../redux/actions\"\n\n\nconst useStyles = makeStyles((theme) => ({\n\n  appBar: {\n    background:\"transparent\",\n    marginTop:20\n  },\n  toolBar:{\n      display: \"flex\",\n      justifyContent: \"space-between\"\n  },\n  itemsLayout:{\n      display: \"flex\",\n  },\n  menuList:{\n    display: \"flex\",\n    flex:1,\n  },\n\n\n}));\n\n\nfunction NavBar(props) {\n    useEffect(async() => {\n            // Verify refresh and access token. If refresh is valid update new access token and set isLogged = true\n            let token = localStorage.getItem('token')\n            if (token === null || token === undefined) {\n                const updatedAccessToken = refreshAccessToken()\n                if (updatedAccessToken === false){\n                    dispatch(LogOut())\n\n                }\n                else{\n                    token = localStorage.getItem('token')\n                }\n                return\n            }\n            const data = {\"token\": token}\n            try{\n                const result = await axiosApiInstance.post(`${API_URL}/api/auth/jwt/verify`,data)\n                if (result === false) {\n                    dispatch(LogOut())\n                }\n                else if (result.status === 200){\n                    dispatch(LogIn())\n                }\n            }\n            catch (e){\n                console.log(e)\n            }\n        },[]);\n    \n    \n    const isLogged = useSelector(state => state.isLogged)\n    const dispatch = useDispatch()\n    const urlLocation = useLocation().pathname\n    const classes = useStyles();\n\n    const menuItemsList = [{'name':'Home',\"link\":\"/\"},{'name':'Styler App',\"link\":\"/styler_app\"}, {'name':'Gallery',\"link\":\"/gallery\"}, {'name':'Styled Gallery',\"link\":\"/styled_gallery\"},\n     {'name':'Shared images',\"link\":\"/shared_images\"}, {'name':'Styles',\"link\":\"/styles\"}]\n\n     async function images(){\n        const result = await axiosApiInstance.get(`${API_URL}/api/images/`)\n        if (result === false){\n            dispatch(OpenLoginDialog())\n            dispatch(LogOut())\n        }\n     }\n\n     function logoutUser(){\n         localStorage.clear()\n         dispatch(LogOut())\n     }\n    // If URL location is styler hide navbar\n    if (urlLocation === \"/styler_demo\"){\n        return null\n    }\n\n    return (\n        <div>\n            <AppBar className={classes.appBar} position=\"static\">\n                <Toolbar className={classes.toolBar}>\n                    <Typography color=\"primary\" variant=\"h5\">\n                        Image styler\n                    </Typography>\n\n                    { isLogged \n                    ?\n                    <div className={classes.itemsLayout}> \n                        <MenuList className={classes.menuList}>\n                            {menuItemsList.map((item,i) => <NavBarItem key={i} menuName={item.name} menuLink = {item.link}/>)}\n                        </MenuList>\n                    <Button onClick={images} color=\"primary\"> daa</Button>\n                    </div>\n                    : <Typography color=\"primary\" variant=\"h5\">Log in to see more features</Typography>\n                    }\n                    \n                    <div style={{display:\"flex\"}}>\n                    { isLogged\n                    ? <Button color=\"primary\" variant=\"outlined\" style={{fontSize:\"1rem\"}} onClick={logoutUser}>Logout</Button>\n                    : \n                    <div style={{display:\"flex\"}}>\n                        <LoginModal/>     \n                        <RegisterModal />\n                    </div>\n                    }\n                    \n                    </div>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}\n\nexport default NavBar;","/home/user/Desktop/image_styler/frontend/src/components/BodyMain/BodyMain.js",[],"/home/user/Desktop/image_styler/frontend/src/components/StylerApp/Features/DragnDrop.js",["160","161"],"/home/user/Desktop/image_styler/frontend/src/components/Navbar/NavBarItem.js",[],"/home/user/Desktop/image_styler/frontend/src/constants.js",[],"/home/user/Desktop/image_styler/frontend/src/variants.js",[],"/home/user/Desktop/image_styler/frontend/src/components/Trying.js",["162","163","164"],"import React, {useState} from 'react';\nimport { motion, AnimatePresence,AnimateSharedLayout } from 'framer-motion'\nimport { stylerStateAnimate } from '../variants'\nimport { ChangeHistory } from '@material-ui/icons';\n\nfunction Trying(props) {\n    const [state, setstate] = useState(true)\n\n    function changeState(){\n        setstate(!state)\n    }\n\n    return (\n        <div style={{margin:\"auto\"}}>\n            <AnimatePresence>\n        {state && (\n\n            <motion.h1 style={{color:\"white\"}}\n            exit={{ x: 2000}}\n            >Order</motion.h1>\n        )}\n           \n    </AnimatePresence>\n\n    <button onClick={changeState}>ab</button>\n            \n        </div>\n    );\n}\n\nexport default Trying;","/home/user/Desktop/image_styler/frontend/src/components/RegisterModal/RegisterModal.js",[],"/home/user/Desktop/image_styler/frontend/src/components/RegisterModal/RegisterForm.js",["165","166","167"],"import React, {useState} from 'react';\nimport { TextField } from 'formik-material-ui';\nimport { Button, Typography } from '@material-ui/core';\nimport { Formik, Form, Field } from 'formik';\nimport {API_URL} from '../../constants'\nimport axios from 'axios'\n\n\n\nfunction RegisterForm(props) {\n    const [infoMessage, setInfoMessage] = useState({\"color\":\"\",\"message\":\"\"});\n\n    return (\n            <Formik\n            initialValues={{\n                email: '',\n                password: '',\n                re_password: '',\n              }}\n            validate={values => {\n            const errors = {}\n            if (!values.email) {\n                errors.email = 'Required';\n            } else if (\n                !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\n            ) {\n                errors.email = 'Invalid email address';\n            }\n            if (!values.password) {\n                errors.password = 'Required';\n            } else if (values.password.length < 6){\n                errors.password = 'Must be at least 6 characters'\n            }\n            if (!values.re_password){\n                errors.re_password = 'Required';\n            } else if (values.re_password.length < 6){\n                errors.re_password = 'Must be at least 6 characters'\n            }\n            else if (values.password != values.re_password){\n                errors.re_password = 'Re-password didnt match'\n            }\n\n            return errors;\n            }}\n            \n            onSubmit={(values, { setSubmitting }) => {\n                setSubmitting(false);\n                \n                axios.post(`${API_URL}/api/auth/users/`, values)\n                    .then(response => {   \n                        setInfoMessage({\"color\":\"green\",\"message\":\"An email has been sent to your email address containing an activation link. Please click on the link to activate your account.\"})\n                    })\n                .catch(error => {\n                    try {\n                        if (error.response.data.email[0] === \"user with this email address already exists.\")\n                        {\n                            setInfoMessage({\"color\":\"red\",\"message\":\"User with this email address already exist.\"})\n                        }\n                    }\n                    catch (e) {\n                        console.log(error.response)\n                        console.log(error.response.status)\n                        if (error.response.status === 500){\n                        setInfoMessage({\"color\":\"red\",\"message\":\"API is down please try again after few minutes\"})\n                        }\n                }\n                });\n              }}\n            >\n            {({ submitForm, isSubmitting }) => (\n            <form onSubmit={e => { e.preventDefault(); submitForm(e) }} autoComplete=\"off\" style={{display:\"flex\", flexDirection:\"column\", marginTop:\"2rem\"}}>\n                <Field\n                component={TextField}\n                name=\"email\"\n                type=\"email\"\n                label=\"Email\"\n                required\n                style={{marginBottom:\"0.2rem\"}}\n                />\n                <Field\n                component={TextField}\n                type=\"password\"\n                label=\"Password\"\n                name=\"password\"\n                required\n                style={{marginBottom:\"0.2rem\"}}\n                />\n                <Field\n                component={TextField}\n                type=\"password\"\n                label=\"Re-password\"\n                name=\"re_password\"\n                required\n                />\n                <div style={{maxWidth:\"210px\"}}>\n                <Typography style={{marginTop:\"2rem\",color:infoMessage.color, marginTop:\"1rem\"}} variant=\"p\" component=\"p\">\n                    {infoMessage.message}\n                </Typography>\n                </div>\n\n                <Button type=\"submit\" variant=\"contained\" color=\"secondary\" style={{marginTop:\"1.2rem\", marginBottom:\"0.2rem\"}}>\n                    Register\n                </Button>\n            </form>\n            )}\n            </Formik>\n    );\n}\n\nexport default RegisterForm;","/home/user/Desktop/image_styler/frontend/src/components/UserActivation/UserActivation.js",[],"/home/user/Desktop/image_styler/frontend/src/components/LoginModal/LoginModal.js",[],"/home/user/Desktop/image_styler/frontend/src/components/LoginModal/LoginForm.js",["168","169","170"],"import React, {useState} from 'react';\nimport { TextField } from 'formik-material-ui';\nimport { Button, Typography } from '@material-ui/core';\nimport { Formik, Form, Field } from 'formik';\nimport {API_URL} from '../../constants'\nimport axios from 'axios'\nimport { useDispatch  } from 'react-redux'\nimport {LogIn, LogOut} from \"../../redux/actions\"\n\n\n\n\nfunction checkIfUserIsActive(handleClose,email,setInfoMessage,values,dispatch){\n    const data = {\"email\":email}\n    axios.post(`${API_URL}/api/activation_check/`,data)\n    .then(response => {   \n        if (response.data.user_is_active === false){\n            setInfoMessage(\"User is not active, Please check your emails and activate user by click on activate link\")\n        }\n        else{\n            // User is active \n            LogInUser(handleClose,values,setInfoMessage,dispatch)\n        }\n    })\n.catch(error => {\n    console.log(error.response)\n    if (error.response.status === 404){\n        setInfoMessage(\"Email does not exist.\")\n    }\n    else {\n        console.log(error.response)\n        setInfoMessage(\"Error try it again after a few minutes\")\n    }\n})\n}\n\nasync function LogInUser(handleClose,values,setInfoMessage,dispatch){\n\n    await axios.post(`${API_URL}/api/auth/jwt/create`, values)\n    .then(response => {  \n        handleClose()\n        localStorage.clear()\n        localStorage.setItem('token',response.data.access)\n        localStorage.setItem('refresh_token',response.data.refresh)\n        axios.defaults.headers.common['Authorization'] = 'Bearer ' + localStorage.getItem('token')\n        dispatch(LogIn())\n    })\n    .catch(error => {\n    console.log(error)\n    if (error.response.status >= 400 && error.response.status < 500){\n            setInfoMessage(\"Wrong credentials\")\n    }\n    else {\n        setInfoMessage(\"Error try it again after a few minutes\")\n    }\n    });\n    \n}\n\n\nfunction LoginForm(props) {\n    const [infoMessage, setInfoMessage] = useState(\"\");\n    const dispatch = useDispatch()\n\n    return (\n            <Formik\n            initialValues={{\n                email: '',\n                password: '',\n              }}\n            validate={values => {\n            const errors = {}\n            if (!values.email) {\n                errors.email = 'Required';\n            } else if (\n                !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\n            ) {\n                errors.email = 'Invalid email address';\n            }\n            if (!values.password) {\n                errors.password = 'Required';\n            } else if (values.password.length < 6){\n                errors.password = 'Must be at least 6 characters'\n            }\n\n            return errors;\n            }}\n            \n            onSubmit={(values, { setSubmitting }) => {\n                setSubmitting(false);\n                checkIfUserIsActive(props.handleClose,values.email,setInfoMessage,values,dispatch)\n              }}\n            >\n            {({ submitForm, isSubmitting }) => (\n            <form onSubmit={e => { e.preventDefault(); submitForm(e) }} autoComplete=\"off\" style={{display:\"flex\", flexDirection:\"column\", marginTop:\"2rem\"}}>\n                <Field\n                component={TextField}\n                name=\"email\"\n                type=\"email\"\n                label=\"Email\"\n                required\n                style={{marginBottom:\"0.2rem\"}}\n                />\n                <Field\n                component={TextField}\n                type=\"password\"\n                label=\"Password\"\n                name=\"password\"\n                required\n                style={{marginBottom:\"0.2rem\"}}\n                />\n\n                <div style={{maxWidth:\"210px\"}}>\n                <Typography style={{marginTop:\"2rem\",color:\"red\", marginTop:\"1rem\"}} variant=\"p\" component=\"p\">\n                    {infoMessage}\n                </Typography>\n                </div>\n\n                <Button type=\"submit\" variant=\"contained\" color=\"secondary\"  style={{marginTop:\"1.2rem\", marginBottom:\"0.2rem\"}}>\n                    Sign in\n                </Button>\n            </form>\n            )}\n            </Formik>\n    );\n}\n\nexport default LoginForm;","/home/user/Desktop/image_styler/frontend/src/axiosTokenHandle.js",[],"/home/user/Desktop/image_styler/frontend/src/components/Gallery/Gallery.js",["171","172","173","174","175","176"],"import React, {useEffect, useState} from 'react';\nimport { Grid, Button, Typography } from '@material-ui/core';\n\nimport {API_URL} from '../../constants'\nimport {axiosApiInstance,refreshAccessToken} from \"../../axiosTokenHandle\"\nimport { useDispatch  } from 'react-redux'\nimport { LogOut, OpenLoginDialog} from \"../../redux/actions\"\nimport AddImageModal from \"./AddImageModal\"\nimport GalleryCard from \"./GalleryCard\"\nimport Box from '@material-ui/core/Box';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {getImages} from \"../../requests/getImages\"\n\nconst useStyles = makeStyles((theme) => ({\n    mainGalleryCards: {\n        display:\"flex\",\n        justifyContent: \"center\",\n        marginTop: \"3rem\",\n        width:\"100%\"\n    },\n    galleryCards:{\n        width:\"80%\",\n    }\n    }));\n\nfunction Gallery(props) {\n    const classes = useStyles();\n    const dispatch = useDispatch()\n    const [images,setImages] = useState([])\n\n    useEffect(async() => {\n        const result = await getImages()\n\n        if (result === false) {\n            dispatch(OpenLoginDialog())\n            dispatch(LogOut())\n        }\n        else{\n            setImages(result)\n        }\n        \n        },[]);\n\n    return (\n        <div style={{display:\"flex\",flexDirection:\"column\",marginTop:\"2rem\", marginBottom:\"1rem\",alignItems:\"center\"}}>\n             <AddImageModal setImages={setImages} images={images}/>\n             <Typography color=\"primary\" variant=\"h6\" style={{marginTop:\"0.5rem\"}}>\n                A maximum of 10 images is allowed\n             </Typography>\n            <div className={classes.mainGalleryCards}>\n                <Box className={classes.galleryCards}>\n                <Grid container direction=\"row\" justify=\"center\" alignItems=\"flex-start\" spacing={3}>\n                    {images.map((item,i) => <GalleryCard data={item} setImages={setImages} images={images}/>)}\n                </Grid>\n                </Box>\n            </div>\n        </div>\n   \n            \n\n        \n    );\n}\n\nexport default Gallery;","/home/user/Desktop/image_styler/frontend/src/redux/reducers/index.js",[],"/home/user/Desktop/image_styler/frontend/src/redux/reducers/logged.js",[],"/home/user/Desktop/image_styler/frontend/src/redux/actions/index.js",[],"/home/user/Desktop/image_styler/frontend/src/redux/reducers/openLoginDialog.js",[],"/home/user/Desktop/image_styler/frontend/src/components/Gallery/AddImageModal.js",["177","178"],"import React, {useState, useEffect} from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport AddImageForm from \"./AddImageForm\"\nimport {API_URL} from \"../../constants\"\nimport {axiosApiInstance} from \"../../axiosTokenHandle\"\nimport { useDispatch  } from 'react-redux'\nimport { LogOut, OpenLoginDialog} from \"../../redux/actions\"\n\n\nfunction SimpleDialog(props) {\n  const { onClose, open } = props;\n\n  const handleClose = () => {\n    onClose();\n  };\n\n\n  return (\n    <Dialog style={{opacity:0.97}} onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\n      <div style={{position:\"absolute\",right:5}}>\n        <IconButton aria-label=\"close\" onClick={handleClose}>\n          <CloseIcon />\n        </IconButton>\n      </div>\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" style={{backgroundColor:\"white\" ,width:\"450px\",height:\"700px\"}}>\n        <Grid item>\n          <Typography style={{marginTop:\"0rem\",color:\"#2d2d2d\"}} variant=\"h4\">Add Image</Typography>\n        </Grid>\n        <Grid item>\n            <AddImageForm userList={props.userList} setImages={props.setImages} handleClose={handleClose}/>\n        </Grid>\n      </Grid>\n    </Dialog>\n  );\n}\n\n\nexport default function LoginModal(props) {\n  const dispatch = useDispatch()\n  const [userList,setUserList] = useState([])\n  \n\n  useEffect(async() => {\n    try{\n      const result = await axiosApiInstance.get(`${API_URL}/api/active_users/`)\n      if (!result){\n          dispatch(OpenLoginDialog())\n          dispatch(LogOut())\n      }\n      else {\n        setUserList(result.data)\n    }}\n    catch (e) {\n      console.log(e)\n    }\n\n},[]);\n\n \n  const [dialogOpen,setDialogOpen] = useState(false)\n  const handleClickOpen = () => {\n    if (props.images.length >= 10){\n      alert(\"You already have 10 images. Please delete any image to add a new one\")\n      return\n    }\n    setDialogOpen(true)\n    \n  };\n\n  const handleClose = (value) => {\n    setDialogOpen(false)\n  };\n\n  return (\n    <div>\n      <Button variant=\"contained\" color=\"primary\" style={{fontSize:\"1.1rem\"}} onClick={handleClickOpen}>Add Image</Button> \n      <SimpleDialog open={dialogOpen} onClose={handleClose} userList={userList} setImages={props.setImages}/>\n    </div>\n  );\n}","/home/user/Desktop/image_styler/frontend/src/components/Gallery/AddImageForm.js",["179"],"import React, {useState} from 'react';\nimport { TextField } from 'formik-material-ui';\nimport { Button, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Formik, Field } from 'formik';\nimport { CheckboxWithLabel } from 'formik-material-ui';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {axiosApiInstance} from \"../../axiosTokenHandle\"\nimport {API_URL} from '../../constants'\nimport { useDispatch  } from 'react-redux'\nimport { LogOut, OpenLoginDialog} from \"../../redux/actions\"\nimport {getImages} from \"../../requests/getImages\"\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    formInput: {\n        marginBottom: \"0.2rem\",\n        }\n  }));\n\nfunction AddImageForm(props) {\n    const dispatch = useDispatch()\n    const classes = useStyles();\n    const [imageNameValue, setImageNameValue] = useState(\"\")\n    const [imageDescrValue, setImageDescrValue] = useState(\"\")\n    const [imageFile, setImageFile] = useState(null)\n    const [userShares,setUserShares] = useState([])\n    const [errorMessage, setErrorMessage] = useState(\"\")\n\n    function handleChange (name,event) {\n        if (name === \"imageName\") {\n            setImageNameValue(event.target.value)\n        }\n        else if (name === \"imageDescription\") {\n            setImageDescrValue(event.target.value)\n        }\n      };\n\n    const usersList=props.userList\n   \n    return (\n        <Formik\n            initialValues={{\n                imageWidth: \"\",\n                imageHeight: \"\",\n              }}\n            validate={values => {\n            const errors = {}\n            \n            if (values.imageWidth !== \"\"){\n                const widthNum = Number(values.imageWidth)\n                if (!Number.isInteger(widthNum)){\n                    errors.imageWidth = \"Width can be only number\"\n                }\n                if (widthNum > 400 || widthNum < 20){\n                    errors.imageWidth = \"Width must be between 20-400\"\n                }\n            }\n            if (values.imageHeight !== \"\"){\n                const heightNum = Number(values.imageHeight)\n                if (!Number.isInteger(heightNum)){\n                    errors.imageHeight = \"Height can be only number\"\n                }\n                if (heightNum > 400 || heightNum < 20){\n                    errors.imageHeight = \"HeightWidth must be between 20-400\"\n                }\n            }\n            \n            return errors;\n            }}\n            \n            onSubmit={async (values, { setSubmitting }) => {\n                setSubmitting(false);\n                \n                const formData = new FormData();\n                // Input all share user IDs to form data\n                userShares.map((item) => {\n                    formData.append(\"share_user\",item.id)\n                })\n                formData.append(\"img_name\",imageNameValue)\n                formData.append(\"img_description\",imageDescrValue)\n                formData.append(\"uploaded_image\",imageFile)\n                formData.append(\"width\",Number(values.imageWidth))\n                formData.append(\"height\",Number(values.imageHeight))\n                formData.append(\"favourite\",values.favourite === undefined ? false : values.favourite)\n                \n                try {\n                    const result = await axiosApiInstance.post(`${API_URL}/api/images/`,formData)\n                        if (!result){\n                            dispatch(OpenLoginDialog())\n                            dispatch(LogOut())\n                        }\n                        else{\n                            // update images with new added image\n                            const result = await getImages()\n                            props.setImages(result)\n                            props.handleClose()\n                        }\n                }\n                    catch (e) {\n                        if (Object.keys(e.response.data).length > 0){\n                            const first_message = Object.keys(e.response.data)[0]\n                            setErrorMessage(e.response.data[first_message])\n                        }\n                        console.log(e)\n                    }\n              }}\n            >\n            {({ submitForm, isSubmitting }) => (\n            <form onSubmit={e => { e.preventDefault(); submitForm(e) }} autoComplete=\"off\" style={{display:\"flex\", flexDirection:\"column\", marginTop:\"2rem\"}}>\n                <Field\n                component={TextField}\n                name=\"imageName\"\n                required\n                label=\"Image Name\"\n                className={classes.formInput}\n                helperText={`${imageNameValue.length}/${25}`}\n                inputProps={{\n                    maxLength: 25\n                  }}\n                onChange={(e) => handleChange(\"imageName\", e)}\n                />\n                <Field\n                component={TextField}\n                name=\"imageDescription\"\n                label=\"Image description\"\n                multiline\n                rowsMax={2}\n                className={classes.formInput}\n                helperText={`${imageDescrValue.length}/${40}`}\n                inputProps={{\n                    maxLength: 40\n                  }}\n                onChange={(e) => handleChange(\"imageDescription\", e)}\n                />\n                <Field\n                component={CheckboxWithLabel}\n                type=\"checkbox\"\n                name=\"favourite\"\n                Label={{ label: 'Favourite' }}\n                >\n                </Field>\n                <Field\n                component={TextField}\n                name=\"imageWidth\"\n                label=\"Width\"\n                className={classes.formInput}\n                helperText=\"Max width is 400px\"\n                />\n                <Field\n                component={TextField}\n                name=\"imageHeight\"\n                label=\"Height\"\n                className={classes.formInput}\n                helperText=\"Max Height is 400px\"\n                />\n                <Autocomplete\n                style={{width: \"217px\",maxHeight:\"120px\"}}\n                multiple\n                limitTags={1}\n                options={usersList}\n                getOptionLabel={(option) => option.email}\n                onChange={(event, value) => setUserShares(value.slice(-2))}\n                value = {userShares}\n                renderInput={(params) => (\n                <Field \n                component={TextField}\n                {...params}\n                name=\"userShare\"\n                rowsMax={2}\n                size=\"small\"\n                label=\"User shares (Max 2 users)\"\n                helperText=\"Share image with other users\"\n                className={classes.formInput}\n                 />\n                 \n                )}/>\n                <Typography style={{marginTop:\"0.7rem\"}} component=\"p\">\n                    Select image (jpg, jpeg)\n                </Typography>\n                <input required id=\"file\" name=\"file\" type=\"file\" accept=\".jpeg,.jpg\" className={classes.formInput} style={{maxWidth:\"225px\"}} onChange={(e) => \n                    setImageFile(e.currentTarget.files[0])}/>\n\n                <div style={{maxWidth:\"210px\"}}>\n                </div>\n                <Typography style={{marginTop:\"0.7rem\",color:\"red\", maxWidth:\"217px\"}} component=\"p\">\n                    {errorMessage}\n                </Typography>\n\n                <Button type=\"submit\" variant=\"contained\" color=\"secondary\"  style={{marginTop:\"1.2rem\", marginBottom:\"0.2rem\"}}>\n                    Confirm\n                </Button>\n            </form>\n            )}\n            </Formik>\n    );\n}\n\nexport default AddImageForm;","/home/user/Desktop/image_styler/frontend/src/components/Gallery/GalleryCard.js",["180","181","182"],"/home/user/Desktop/image_styler/frontend/src/components/Gallery/ModalHelpers/DeleteModal.js",[],"/home/user/Desktop/image_styler/frontend/src/components/StylerApp/Features/GalleryImageModal/GallerySelectModal.js",[],"/home/user/Desktop/image_styler/frontend/src/components/StylerApp/Features/GalleryImageModal/GalleryImagesModal.js",["183","184"],"/home/user/Desktop/image_styler/frontend/src/components/StylerApp/Features/GalleryImageModal/GalleryImageModal.js",[],"/home/user/Desktop/image_styler/frontend/src/requests/getImages.js",[],{"ruleId":"185","severity":1,"message":"186","line":8,"column":9,"nodeType":"187","messageId":"188","endLine":8,"endColumn":16},{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","replacedBy":"192"},{"ruleId":"185","severity":1,"message":"193","line":2,"column":8,"nodeType":"187","messageId":"188","endLine":2,"endColumn":14},{"ruleId":"185","severity":1,"message":"194","line":12,"column":18,"nodeType":"187","messageId":"188","endLine":12,"endColumn":33},{"ruleId":"185","severity":1,"message":"195","line":12,"column":34,"nodeType":"187","messageId":"188","endLine":12,"endColumn":53},{"ruleId":"185","severity":1,"message":"196","line":13,"column":10,"nodeType":"187","messageId":"188","endLine":13,"endColumn":21},{"ruleId":"197","severity":1,"message":"198","line":27,"column":13,"nodeType":"199","endLine":27,"endColumn":108},{"ruleId":"197","severity":1,"message":"198","line":28,"column":13,"nodeType":"199","endLine":28,"endColumn":33},{"ruleId":"197","severity":1,"message":"198","line":29,"column":13,"nodeType":"199","endLine":29,"endColumn":112},{"ruleId":"197","severity":1,"message":"198","line":25,"column":21,"nodeType":"199","endLine":25,"endColumn":118},{"ruleId":"185","severity":1,"message":"200","line":1,"column":16,"nodeType":"187","messageId":"188","endLine":1,"endColumn":24},{"ruleId":"201","severity":1,"message":"202","line":42,"column":15,"nodeType":"203","endLine":69,"endColumn":10},{"ruleId":"201","severity":1,"message":"204","line":69,"column":11,"nodeType":"205","endLine":69,"endColumn":13,"suggestions":"206"},{"ruleId":"207","severity":1,"message":"208","line":8,"column":25,"nodeType":"209","messageId":"210","endLine":8,"endColumn":27},{"ruleId":"197","severity":1,"message":"198","line":23,"column":30,"nodeType":"199","endLine":23,"endColumn":141},{"ruleId":"185","severity":1,"message":"195","line":2,"column":34,"nodeType":"187","messageId":"188","endLine":2,"endColumn":53},{"ruleId":"185","severity":1,"message":"211","line":3,"column":10,"nodeType":"187","messageId":"188","endLine":3,"endColumn":28},{"ruleId":"185","severity":1,"message":"212","line":4,"column":10,"nodeType":"187","messageId":"188","endLine":4,"endColumn":23},{"ruleId":"185","severity":1,"message":"213","line":4,"column":18,"nodeType":"187","messageId":"188","endLine":4,"endColumn":22},{"ruleId":"207","severity":1,"message":"208","line":39,"column":38,"nodeType":"209","messageId":"210","endLine":39,"endColumn":40},{"ruleId":"214","severity":1,"message":"215","line":96,"column":79,"nodeType":"216","messageId":"210","endLine":96,"endColumn":88},{"ruleId":"185","severity":1,"message":"213","line":4,"column":18,"nodeType":"187","messageId":"188","endLine":4,"endColumn":22},{"ruleId":"185","severity":1,"message":"217","line":8,"column":16,"nodeType":"187","messageId":"188","endLine":8,"endColumn":22},{"ruleId":"214","severity":1,"message":"215","line":114,"column":67,"nodeType":"216","messageId":"210","endLine":114,"endColumn":76},{"ruleId":"185","severity":1,"message":"218","line":2,"column":16,"nodeType":"187","messageId":"188","endLine":2,"endColumn":22},{"ruleId":"185","severity":1,"message":"186","line":4,"column":9,"nodeType":"187","messageId":"188","endLine":4,"endColumn":16},{"ruleId":"185","severity":1,"message":"219","line":5,"column":9,"nodeType":"187","messageId":"188","endLine":5,"endColumn":25},{"ruleId":"185","severity":1,"message":"220","line":5,"column":26,"nodeType":"187","messageId":"188","endLine":5,"endColumn":44},{"ruleId":"201","severity":1,"message":"202","line":31,"column":15,"nodeType":"203","endLine":42,"endColumn":10},{"ruleId":"201","severity":1,"message":"204","line":42,"column":11,"nodeType":"205","endLine":42,"endColumn":13,"suggestions":"221"},{"ruleId":"201","severity":1,"message":"202","line":48,"column":13,"nodeType":"203","endLine":62,"endColumn":2},{"ruleId":"201","severity":1,"message":"204","line":62,"column":3,"nodeType":"205","endLine":62,"endColumn":5,"suggestions":"222"},{"ruleId":"223","severity":1,"message":"224","line":78,"column":39,"nodeType":"203","messageId":"225","endLine":78,"endColumn":41},{"ruleId":"185","severity":1,"message":"226","line":2,"column":10,"nodeType":"187","messageId":"188","endLine":2,"endColumn":20},{"ruleId":"185","severity":1,"message":"227","line":4,"column":8,"nodeType":"187","messageId":"188","endLine":4,"endColumn":22},{"ruleId":"185","severity":1,"message":"218","line":7,"column":8,"nodeType":"187","messageId":"188","endLine":7,"endColumn":14},{"ruleId":"201","severity":1,"message":"202","line":14,"column":15,"nodeType":"203","endLine":25,"endColumn":10},{"ruleId":"201","severity":1,"message":"204","line":25,"column":11,"nodeType":"205","endLine":25,"endColumn":13,"suggestions":"228"},"no-unused-vars","'API_URL' is defined but never used.","Identifier","unusedVar","no-native-reassign",["229"],"no-negated-in-lhs",["230"],"'NavBar' is defined but never used.","'AnimatePresence' is defined but never used.","'AnimateSharedLayout' is defined but never used.","'demoAnimate' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["231"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'stylerStateAnimate' is defined but never used.","'ChangeHistory' is defined but never used.","'Form' is defined but never used.","no-dupe-keys","Duplicate key 'marginTop'.","ObjectExpression","'LogOut' is defined but never used.","'Button' is defined but never used.","'axiosApiInstance' is defined but never used.","'refreshAccessToken' is defined but never used.",["232"],["233"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","'makeStyles' is defined but never used.","'CardActionArea' is defined but never used.",["234"],"no-global-assign","no-unsafe-negation",{"desc":"235","fix":"236"},{"desc":"235","fix":"237"},{"desc":"235","fix":"238"},{"desc":"235","fix":"239"},"Update the dependencies array to be: [dispatch]",{"range":"240","text":"241"},{"range":"242","text":"241"},{"range":"243","text":"241"},{"range":"244","text":"241"},[2111,2113],"[dispatch]",[1194,1196],[1896,1898],[685,687]]