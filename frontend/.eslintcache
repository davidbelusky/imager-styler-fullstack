[{"/home/user/Desktop/image_styler/frontend/src/index.js":"1","/home/user/Desktop/image_styler/frontend/src/App.js":"2","/home/user/Desktop/image_styler/frontend/src/reportWebVitals.js":"3","/home/user/Desktop/image_styler/frontend/src/components/Main.js":"4","/home/user/Desktop/image_styler/frontend/src/components/StylerApp/StylerApp.js":"5","/home/user/Desktop/image_styler/frontend/src/components/StylerApp/Confirm.js":"6","/home/user/Desktop/image_styler/frontend/src/components/StylerApp/Result.js":"7","/home/user/Desktop/image_styler/frontend/src/components/Navbar/NavBar.js":"8","/home/user/Desktop/image_styler/frontend/src/components/BodyMain/BodyMain.js":"9","/home/user/Desktop/image_styler/frontend/src/components/StylerApp/Features/DragnDrop.js":"10","/home/user/Desktop/image_styler/frontend/src/components/Navbar/NavBarItem.js":"11","/home/user/Desktop/image_styler/frontend/src/constants.js":"12","/home/user/Desktop/image_styler/frontend/src/variants.js":"13","/home/user/Desktop/image_styler/frontend/src/components/Trying.js":"14","/home/user/Desktop/image_styler/frontend/src/components/RegisterModal/RegisterModal.js":"15","/home/user/Desktop/image_styler/frontend/src/components/RegisterModal/RegisterForm.js":"16","/home/user/Desktop/image_styler/frontend/src/components/UserActivation/UserActivation.js":"17","/home/user/Desktop/image_styler/frontend/src/components/LoginModal/LoginModal.js":"18","/home/user/Desktop/image_styler/frontend/src/components/LoginModal/LoginForm.js":"19","/home/user/Desktop/image_styler/frontend/src/axiosTokenHandle.js":"20"},{"size":1085,"mtime":1609970414343,"results":"21","hashOfConfig":"22"},{"size":780,"mtime":1609788173195,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":1608163087752,"results":"24","hashOfConfig":"22"},{"size":519,"mtime":1609788079053,"results":"25","hashOfConfig":"22"},{"size":5945,"mtime":1608938403494,"results":"26","hashOfConfig":"22"},{"size":846,"mtime":1609604801850,"results":"27","hashOfConfig":"22"},{"size":1443,"mtime":1608920439603,"results":"28","hashOfConfig":"22"},{"size":2228,"mtime":1609970435788,"results":"29","hashOfConfig":"22"},{"size":2839,"mtime":1608335411837,"results":"30","hashOfConfig":"22"},{"size":876,"mtime":1608841857308,"results":"31","hashOfConfig":"22"},{"size":714,"mtime":1608242745374,"results":"32","hashOfConfig":"22"},{"size":79,"mtime":1608819651043,"results":"33","hashOfConfig":"22"},{"size":676,"mtime":1608937668042,"results":"34","hashOfConfig":"22"},{"size":711,"mtime":1608932398305,"results":"35","hashOfConfig":"22"},{"size":1606,"mtime":1609682683058,"results":"36","hashOfConfig":"22"},{"size":4097,"mtime":1609607721376,"results":"37","hashOfConfig":"22"},{"size":1822,"mtime":1609690773855,"results":"38","hashOfConfig":"22"},{"size":1595,"mtime":1609691604842,"results":"39","hashOfConfig":"22"},{"size":3876,"mtime":1609965042857,"results":"40","hashOfConfig":"22"},{"size":1284,"mtime":1609970596847,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"2yq4p8",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/user/Desktop/image_styler/frontend/src/index.js",["91"],"/home/user/Desktop/image_styler/frontend/src/App.js",[],["92","93"],"/home/user/Desktop/image_styler/frontend/src/reportWebVitals.js",[],"/home/user/Desktop/image_styler/frontend/src/components/Main.js",["94","95"],"import React, {useState} from 'react'\nimport NavBar from \"./Navbar/NavBar\"\nimport BodyMain from \"./BodyMain/BodyMain\"\nimport { mainAnimate } from \"../variants\"\nimport { motion } from 'framer-motion'\n\n\nexport default function Main() {\n    const [logged,setLogged] = useState(false)\n    return (\n        <motion.div\n            variants={mainAnimate}\n            initial=\"hidden\"\n            animate=\"show\"\n            exit=\"hidden\"\n        >\n            <NavBar />\n            <BodyMain />\n        </motion.div>\n    )\n}\n","/home/user/Desktop/image_styler/frontend/src/components/StylerApp/StylerApp.js",["96","97","98"],"import React, { useState } from 'react'\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport DragnDrop from \"./Features/DragnDrop\"\nimport Button from '@material-ui/core/Button';\nimport Confirm from \"./Confirm\"\nimport Result from \"./Result\"\nimport {API_URL} from '../../constants'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport { motion, AnimatePresence,AnimateSharedLayout } from 'framer-motion'\nimport { demoAnimate,stylerChangePage } from '../../variants'\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    appTitle: {\n        width: \"100%\",\n        height:\"100%\",\n        marginTop: \"2rem\",\n\n    },\n    appBody:{\n        width: \"100%\",\n        height:\"35rem\",\n        display:\"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n    }\n  }));\n\n\nexport default function StylerApp() {\n    const classes = useStyles();\n    const steps = [{\"step\":1,\"title\":\"Select image\"},{\"step\":2,\"title\":\"Select style\"},{\"step\":3,\"title\":\"Confirm\"},{\"step\":4,\"title\":\"Result\"}]\n\n    const [step, setStep] = useState(1);\n    const [file, setFile] = useState(\"\");\n    const [fileStyle, setFileStyle] = useState(\"\");\n    const [resultImage,setResultImage] = useState(\"\");\n    const [screenAnimation,setScreenAnimate] = useState(\"stay\")\n    const actualStepData = steps.filter(x => x.step === step)[0]\n\n    function startStyleImage () {\n        const formData = new FormData();\n        formData.append(\"original_image\",file['file'])\n        formData.append('style_image',fileStyle['file'])\n\n      axios.post(`${API_URL}/api/demo_styler/`, formData)\n        .then(response => {   \n            setResultImage(response.data.style_image)\n        })\n      .catch(error => { console.log(error.request)\n     } );\n\n    }\n    function stepComponent() {\n        // Return action component based on step state\n        switch(step) {\n          case 1:\n            return <DragnDrop setFile={setFile} file={file}/>\n          case 2:\n              return <DragnDrop setFile={setFileStyle} file={fileStyle}/>\n          case 3:\n              return <Confirm file={file} fileStyle={fileStyle}/>\n          case 4:\n              return <Result resultImage={resultImage}/>\n          default:\n            return 'abc';\n        }\n      }\n\n    function startScreenAnimate(direction){\n        setScreenAnimate(direction)\n        let newStep\n        if (direction === \"next\"){\n            newStep = step + 1\n        }\n        else if (direction === \"back\"){\n            newStep = step - 1\n        }\n        else if (direction === \"tryAgain\"){\n            newStep = 1\n        }\n        setTimeout(\n            () => {setStep(newStep)},750\n        )\n        setTimeout(\n            () => {setScreenAnimate(\"stay\")},1000\n        )\n\n    }\n\n    function handleClick(e){\n        // Change steps, and validate before change, try again clean all states and set step to default 1\n        const btnName = e.target.textContent\n        if (btnName === \"Next\"){\n            if (step === 1 && file === \"\") {\n                alert('Please select image')\n                return\n            }\n            else if (step === 2 && fileStyle === \"\"){\n                alert(\"Please select style image\")\n                return\n                }\n            \n            if (step === 3){\n                startStyleImage()\n            }\n            startScreenAnimate(\"next\")\n            \n        }\n        else if (btnName === \"Back\"){\n            startScreenAnimate(\"back\")\n            \n        }\n        else if (btnName === \"Try again\"){\n            setFile(\"\")\n            setFileStyle(\"\")\n            setResultImage(\"\")\n            startScreenAnimate(\"tryAgain\")\n        }\n    }\n\n    return (\n        <motion.div\n        initial={{opacity:0}}\n        animate={{opacity:1}}\n        >\n            <Button style={{fontSize:\"1rem\" ,width:\"10rem\", marginTop:\"0.2rem\",textTransform: \"none\"}} variant=\"contained\" color=\"secondary\" component={Link} to=\"/\">\n                Back to main\n            </Button>\n        <motion.div\n        animate={screenAnimation}\n        variants={stylerChangePage}\n        >\n            \n            <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\n                    <Grid item xs={12} sm={6}>\n                        <div className={classes.appTitle}>\n                            <Typography color=\"primary\" variant=\"h2\">{actualStepData.title}</Typography>\n                        </div>\n                    </Grid>\n                    <Grid item xs={12} sm={6} style={{width: \"100%\"}}>\n                        <div className={classes.appBody}>\n                            {stepComponent()}\n                        </div>\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n\n                        {(step > 1 && step < 4)&&\n                            <Button style={{fontSize:\"1.5rem\" ,width:\"10rem\" ,marginRight:\"2rem\"}} variant=\"outlined\" color=\"primary\" onClick={handleClick}>\n                                Back\n                            </Button>\n                        }\n\n                        \n                        {step < 4 &&\n                            <Button style={{fontSize:\"1.5rem\" ,width:\"10rem\"}}\n                             variant=\"contained\" color=\"primary\" onClick={handleClick}>\n                                Next\n                            </Button>\n                        }\n\n                        {step === 4 &&\n                            <Button style={{fontSize:\"1.5rem\" ,width:\"13rem\"}} variant=\"contained\" color=\"primary\" onClick={handleClick}>\n                                Try again\n                            </Button>\n                        }\n                        \n                     \n                    </Grid>\n                </Grid>\n\n        </motion.div>\n        </motion.div>\n    )\n}\n","/home/user/Desktop/image_styler/frontend/src/components/StylerApp/Confirm.js",["99","100","101"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport plusImg from '../../images/static/plus.png'\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    confirmLayout: {\n        width: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        \"& img\": {\n            marginBottom:\"2rem\",\n\n        }\n    },\n  }));\n\n\nfunction Confirm(props) {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.confirmLayout}>\n            <img style={{maxWidth: \"300px\", maxHeight: \"180px\" ,borderRadius: \"4%\"}} src={props.file.url}/>\n            <img src={plusImg}/>\n            <img style={{maxWidth: \"300px\", maxHeight: \"180px\",borderRadius: \"4%\"}} src={props.fileStyle.url}/>\n        </div>\n    );\n}\n\nexport default Confirm;","/home/user/Desktop/image_styler/frontend/src/components/StylerApp/Result.js",["102"],"import React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\n\n\nconst useStyles = makeStyles((theme) => ({\n    resultLayout:{\n        display:\"flex\",\n        flexDirection:\"column\",\n        alignItems:\"center\"\n    },\n  }));\n\nfunction Result(props) {\n    const classes = useStyles();\n    console.log(props.resultImage)\n\n    return (\n        <div>\n            {props.resultImage ? (\n                <div className={classes.resultLayout}>\n                    <img style={{maxWidth: \"500px\", maxHeight: \"380px\",borderRadius: \"4%\"}} src={props.resultImage}/>\n                    <Typography style={{marginTop:\"2rem\"}} variant=\"h4\" component=\"h4\" color=\"primary\">\n                    <Link href={props.resultImage}>\n                        Link\n                    </Link>\n                    </Typography>\n                    \n                </div>\n                )\n            :(\n                <div className={classes.resultLayout}>\n                    <CircularProgress color=\"primary\" size=\"6rem\" />\n                    <Typography style={{marginTop:\"5rem\"}} variant=\"h4\" component=\"h4\" color=\"primary\">\n                        Styling\n                    </Typography>\n                </div>\n            )}\n\n        </div>\n    );\n}\n\nexport default Result;","/home/user/Desktop/image_styler/frontend/src/components/Navbar/NavBar.js",["103"],"/home/user/Desktop/image_styler/frontend/src/components/BodyMain/BodyMain.js",[],"/home/user/Desktop/image_styler/frontend/src/components/StylerApp/Features/DragnDrop.js",["104","105"],"import React from 'react'\nimport {DropzoneArea} from 'material-ui-dropzone'\n\n\n\nfunction DragnDrop(props) {\n    function handleChange(file){\n        if (file.length != 0) {\n            props.setFile({\"file\":file[0],\"url\":URL.createObjectURL(file[0])});\n        }\n      }\n    return (\n        <div style={{display:\"flex\", flexDirection:\"column\", width: \"30rem\", height: \"100%\",marginTop:\"1rem\"}}>\n            <DropzoneArea \n                acceptedFiles={['image/jpeg', 'image/png', 'image/bmp']}\n                maxFileSize={3000000}\n                showPreviewsInDropzone={false}\n                filesLimit={1}\n                onChange={handleChange.bind()}\n        />\n\n        { props.file.file && <img style={{maxWidth: \"400px\", maxHeight: \"230px\", margin: \"auto\" ,borderRadius: \"4%\"}} src={props.file.url}/>}\n            \n        </div>\n    );\n}\n\nexport default DragnDrop;\n","/home/user/Desktop/image_styler/frontend/src/components/Navbar/NavBarItem.js",[],"/home/user/Desktop/image_styler/frontend/src/constants.js",[],"/home/user/Desktop/image_styler/frontend/src/variants.js",[],"/home/user/Desktop/image_styler/frontend/src/components/Trying.js",["106","107","108"],"import React, {useState} from 'react';\nimport { motion, AnimatePresence,AnimateSharedLayout } from 'framer-motion'\nimport { stylerStateAnimate } from '../variants'\nimport { ChangeHistory } from '@material-ui/icons';\n\nfunction Trying(props) {\n    const [state, setstate] = useState(true)\n\n    function changeState(){\n        setstate(!state)\n    }\n\n    return (\n        <div style={{margin:\"auto\"}}>\n            <AnimatePresence>\n        {state && (\n\n            <motion.h1 style={{color:\"white\"}}\n            exit={{ x: 2000}}\n            >Order</motion.h1>\n        )}\n           \n    </AnimatePresence>\n\n    <button onClick={changeState}>ab</button>\n            \n        </div>\n    );\n}\n\nexport default Trying;","/home/user/Desktop/image_styler/frontend/src/components/RegisterModal/RegisterModal.js",[],"/home/user/Desktop/image_styler/frontend/src/components/RegisterModal/RegisterForm.js",["109","110","111"],"import React, {useState} from 'react';\nimport { TextField } from 'formik-material-ui';\nimport { Button, Typography } from '@material-ui/core';\nimport { Formik, Form, Field } from 'formik';\nimport {API_URL} from '../../constants'\nimport axios from 'axios'\n\n\n\nfunction RegisterForm(props) {\n    const [infoMessage, setInfoMessage] = useState({\"color\":\"\",\"message\":\"\"});\n\n    return (\n            <Formik\n            initialValues={{\n                email: '',\n                password: '',\n                re_password: '',\n              }}\n            validate={values => {\n            const errors = {}\n            if (!values.email) {\n                errors.email = 'Required';\n            } else if (\n                !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\n            ) {\n                errors.email = 'Invalid email address';\n            }\n            if (!values.password) {\n                errors.password = 'Required';\n            } else if (values.password.length < 6){\n                errors.password = 'Must be at least 6 characters'\n            }\n            if (!values.re_password){\n                errors.re_password = 'Required';\n            } else if (values.re_password.length < 6){\n                errors.re_password = 'Must be at least 6 characters'\n            }\n            else if (values.password != values.re_password){\n                errors.re_password = 'Re-password didnt match'\n            }\n\n            return errors;\n            }}\n            \n            onSubmit={(values, { setSubmitting }) => {\n                setSubmitting(false);\n                \n                axios.post(`${API_URL}/api/auth/users/`, values)\n                    .then(response => {   \n                        setInfoMessage({\"color\":\"green\",\"message\":\"An email has been sent to your email address containing an activation link. Please click on the link to activate your account.\"})\n                    })\n                .catch(error => {\n                    try {\n                        if (error.response.data.email[0] === \"user with this email address already exists.\")\n                        {\n                            setInfoMessage({\"color\":\"red\",\"message\":\"User with this email address already exist.\"})\n                        }\n                    }\n                    catch (e) {\n                        console.log(error.response)\n                        console.log(error.response.status)\n                        if (error.response.status === 500){\n                        setInfoMessage({\"color\":\"red\",\"message\":\"API is down please try again after few minutes\"})\n                        }\n                }\n                });\n              }}\n            >\n            {({ submitForm, isSubmitting }) => (\n            <form autoComplete=\"off\" style={{display:\"flex\", flexDirection:\"column\", marginTop:\"2rem\"}}>\n                <Field\n                component={TextField}\n                name=\"email\"\n                type=\"email\"\n                label=\"Email\"\n                style={{marginBottom:\"0.2rem\"}}\n                />\n                <Field\n                component={TextField}\n                type=\"password\"\n                label=\"Password\"\n                name=\"password\"\n                style={{marginBottom:\"0.2rem\"}}\n                />\n                <Field\n                component={TextField}\n                type=\"password\"\n                label=\"Re-password\"\n                name=\"re_password\"\n                />\n                <div style={{maxWidth:\"210px\"}}>\n                <Typography style={{marginTop:\"2rem\",color:infoMessage.color, marginTop:\"1rem\"}} variant=\"p\" component=\"p\">\n                    {infoMessage.message}\n                </Typography>\n                </div>\n\n                <Button variant=\"contained\" color=\"secondary\" onClick={submitForm} style={{marginTop:\"1.2rem\", marginBottom:\"0.2rem\"}}\n                \n                >\n                    Register\n                </Button>\n\n                \n\n            </form>\n            )}\n            </Formik>\n    );\n}\n\nexport default RegisterForm;","/home/user/Desktop/image_styler/frontend/src/components/UserActivation/UserActivation.js",[],"/home/user/Desktop/image_styler/frontend/src/components/LoginModal/LoginModal.js",[],"/home/user/Desktop/image_styler/frontend/src/components/LoginModal/LoginForm.js",["112","113"],"import React, {useState} from 'react';\nimport { TextField } from 'formik-material-ui';\nimport { Button, Typography } from '@material-ui/core';\nimport { Formik, Form, Field } from 'formik';\nimport {API_URL} from '../../constants'\nimport axios from 'axios'\n\n\n\nfunction checkIfUserIsActive(handleClose,email,setInfoMessage,values){\n    const data = {\"email\":email}\n    axios.post(`${API_URL}/api/activation_check/`,data)\n    .then(response => {   \n        if (response.data.user_is_active === false){\n            setInfoMessage(\"User is not active, Please check your emails and activate user by click on activate link\")\n        }\n        else{\n            // User is active \n            LogInUser(handleClose,values,setInfoMessage)\n        }\n    })\n.catch(error => {\n    console.log(error.response)\n    if (error.response.status === 404){\n        setInfoMessage(\"Email does not exist.\")\n    }\n    else {\n        console.log(error.response)\n        setInfoMessage(\"Error try it again after a few minutes\")\n    }\n})\n}\n\nfunction LogInUser(handleClose,values,setInfoMessage){\n    \n    axios.post(`${API_URL}/api/auth/jwt/create`, values)\n    .then(response => {  \n        handleClose()\n        localStorage.clear()\n        localStorage.setItem('token',response.data.access)\n        localStorage.setItem('refresh_token',response.data.refresh)\n        axios.defaults.headers.common['Authorization'] = 'Bearer ' + localStorage.getItem('token')\n    })\n    .catch(error => {\n    console.log(error)\n    if (error.response.status >= 400 && error.response.status < 500){\n            setInfoMessage(\"Wrong credentials\")\n    }\n    else {\n        setInfoMessage(\"Error try it again after a few minutes\")\n    }\n    });\n    \n}\n\n\nfunction RegisterForm(props) {\n    const [infoMessage, setInfoMessage] = useState(\"\");\n    return (\n            <Formik\n            initialValues={{\n                email: '',\n                password: '',\n              }}\n            validate={values => {\n            const errors = {}\n            if (!values.email) {\n                errors.email = 'Required';\n            } else if (\n                !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\n            ) {\n                errors.email = 'Invalid email address';\n            }\n            if (!values.password) {\n                errors.password = 'Required';\n            } else if (values.password.length < 6){\n                errors.password = 'Must be at least 6 characters'\n            }\n\n            return errors;\n            }}\n            \n            onSubmit={(values, { setSubmitting }) => {\n                setSubmitting(false);\n                checkIfUserIsActive(props.handleClose,values.email,setInfoMessage,values)\n              }}\n            >\n            {({ submitForm, isSubmitting }) => (\n            <form autoComplete=\"off\" style={{display:\"flex\", flexDirection:\"column\", marginTop:\"2rem\"}}>\n                <Field\n                component={TextField}\n                name=\"email\"\n                type=\"email\"\n                label=\"Email\"\n                style={{marginBottom:\"0.2rem\"}}\n                />\n                <Field\n                component={TextField}\n                type=\"password\"\n                label=\"Password\"\n                name=\"password\"\n                style={{marginBottom:\"0.2rem\"}}\n                />\n\n                <div style={{maxWidth:\"210px\"}}>\n                <Typography style={{marginTop:\"2rem\",color:\"red\", marginTop:\"1rem\"}} variant=\"p\" component=\"p\">\n                    {infoMessage}\n                </Typography>\n                </div>\n\n                <Button variant=\"contained\" color=\"secondary\" onClick={submitForm} style={{marginTop:\"1.2rem\", marginBottom:\"0.2rem\"}}>\n                    Sign in\n                </Button>\n            </form>\n            )}\n            </Formik>\n    );\n}\n\nexport default RegisterForm;","/home/user/Desktop/image_styler/frontend/src/axiosTokenHandle.js",[],{"ruleId":"114","severity":1,"message":"115","line":8,"column":9,"nodeType":"116","messageId":"117","endLine":8,"endColumn":16},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"114","severity":1,"message":"122","line":9,"column":12,"nodeType":"116","messageId":"117","endLine":9,"endColumn":18},{"ruleId":"114","severity":1,"message":"123","line":9,"column":19,"nodeType":"116","messageId":"117","endLine":9,"endColumn":28},{"ruleId":"114","severity":1,"message":"124","line":12,"column":18,"nodeType":"116","messageId":"117","endLine":12,"endColumn":33},{"ruleId":"114","severity":1,"message":"125","line":12,"column":34,"nodeType":"116","messageId":"117","endLine":12,"endColumn":53},{"ruleId":"114","severity":1,"message":"126","line":13,"column":10,"nodeType":"116","messageId":"117","endLine":13,"endColumn":21},{"ruleId":"127","severity":1,"message":"128","line":27,"column":13,"nodeType":"129","endLine":27,"endColumn":108},{"ruleId":"127","severity":1,"message":"128","line":28,"column":13,"nodeType":"129","endLine":28,"endColumn":33},{"ruleId":"127","severity":1,"message":"128","line":29,"column":13,"nodeType":"129","endLine":29,"endColumn":112},{"ruleId":"127","severity":1,"message":"128","line":24,"column":21,"nodeType":"129","endLine":24,"endColumn":118},{"ruleId":"114","severity":1,"message":"130","line":13,"column":8,"nodeType":"116","messageId":"117","endLine":13,"endColumn":13},{"ruleId":"131","severity":1,"message":"132","line":8,"column":25,"nodeType":"133","messageId":"134","endLine":8,"endColumn":27},{"ruleId":"127","severity":1,"message":"128","line":22,"column":30,"nodeType":"129","endLine":22,"endColumn":141},{"ruleId":"114","severity":1,"message":"125","line":2,"column":34,"nodeType":"116","messageId":"117","endLine":2,"endColumn":53},{"ruleId":"114","severity":1,"message":"135","line":3,"column":10,"nodeType":"116","messageId":"117","endLine":3,"endColumn":28},{"ruleId":"114","severity":1,"message":"136","line":4,"column":10,"nodeType":"116","messageId":"117","endLine":4,"endColumn":23},{"ruleId":"114","severity":1,"message":"137","line":4,"column":18,"nodeType":"116","messageId":"117","endLine":4,"endColumn":22},{"ruleId":"131","severity":1,"message":"132","line":39,"column":38,"nodeType":"133","messageId":"134","endLine":39,"endColumn":40},{"ruleId":"138","severity":1,"message":"139","line":93,"column":79,"nodeType":"140","messageId":"134","endLine":93,"endColumn":88},{"ruleId":"114","severity":1,"message":"137","line":4,"column":18,"nodeType":"116","messageId":"117","endLine":4,"endColumn":22},{"ruleId":"138","severity":1,"message":"139","line":106,"column":67,"nodeType":"140","messageId":"134","endLine":106,"endColumn":76},"no-unused-vars","'API_URL' is defined but never used.","Identifier","unusedVar","no-native-reassign",["141"],"no-negated-in-lhs",["142"],"'logged' is assigned a value but never used.","'setLogged' is assigned a value but never used.","'AnimatePresence' is defined but never used.","'AnimateSharedLayout' is defined but never used.","'demoAnimate' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'axios' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'stylerStateAnimate' is defined but never used.","'ChangeHistory' is defined but never used.","'Form' is defined but never used.","no-dupe-keys","Duplicate key 'marginTop'.","ObjectExpression","no-global-assign","no-unsafe-negation"]