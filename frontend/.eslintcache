[{"/home/user/Desktop/image_styler/frontend/src/index.js":"1","/home/user/Desktop/image_styler/frontend/src/App.js":"2","/home/user/Desktop/image_styler/frontend/src/reportWebVitals.js":"3","/home/user/Desktop/image_styler/frontend/src/components/Main.js":"4","/home/user/Desktop/image_styler/frontend/src/components/StylerApp/StylerApp.js":"5","/home/user/Desktop/image_styler/frontend/src/components/StylerApp/Confirm.js":"6","/home/user/Desktop/image_styler/frontend/src/components/StylerApp/Result.js":"7","/home/user/Desktop/image_styler/frontend/src/components/Navbar/NavBar.js":"8","/home/user/Desktop/image_styler/frontend/src/components/BodyMain/BodyMain.js":"9","/home/user/Desktop/image_styler/frontend/src/components/StylerApp/Features/DragnDrop.js":"10","/home/user/Desktop/image_styler/frontend/src/components/Navbar/NavBarItem.js":"11","/home/user/Desktop/image_styler/frontend/src/constants.js":"12","/home/user/Desktop/image_styler/frontend/src/variants.js":"13","/home/user/Desktop/image_styler/frontend/src/components/Trying.js":"14","/home/user/Desktop/image_styler/frontend/src/components/RegisterModal/RegisterModal.js":"15","/home/user/Desktop/image_styler/frontend/src/components/RegisterModal/RegisterForm.js":"16","/home/user/Desktop/image_styler/frontend/src/components/UserActivation/UserActivation.js":"17","/home/user/Desktop/image_styler/frontend/src/components/LoginModal/LoginModal.js":"18","/home/user/Desktop/image_styler/frontend/src/components/LoginModal/LoginForm.js":"19","/home/user/Desktop/image_styler/frontend/src/axiosTokenHandle.js":"20","/home/user/Desktop/image_styler/frontend/src/components/Gallery/Gallery.js":"21","/home/user/Desktop/image_styler/frontend/src/redux/reducers/index.js":"22","/home/user/Desktop/image_styler/frontend/src/redux/reducers/logged.js":"23","/home/user/Desktop/image_styler/frontend/src/redux/actions/index.js":"24","/home/user/Desktop/image_styler/frontend/src/redux/reducers/openLoginDialog.js":"25","/home/user/Desktop/image_styler/frontend/src/components/Gallery/AddImageModal.js":"26","/home/user/Desktop/image_styler/frontend/src/components/Gallery/AddImageForm.js":"27","/home/user/Desktop/image_styler/frontend/src/components/Gallery/GalleryCard.js":"28","/home/user/Desktop/image_styler/frontend/src/components/Gallery/ModalHelpers/DeleteModal.js":"29","/home/user/Desktop/image_styler/frontend/src/components/StylerApp/Features/GalleryImageModal/GallerySelectModal.js":"30","/home/user/Desktop/image_styler/frontend/src/components/StylerApp/Features/GalleryImageModal/GalleryImagesModal.js":"31","/home/user/Desktop/image_styler/frontend/src/components/StylerApp/Features/GalleryImageModal/GalleryImageModal.js":"32","/home/user/Desktop/image_styler/frontend/src/requests/getImages.js":"33","/home/user/Desktop/image_styler/frontend/src/requests/getUsers.js":"34","/home/user/Desktop/image_styler/frontend/src/components/StylerApp/Features/StylerForm.js":"35","/home/user/Desktop/image_styler/frontend/src/requests/getStyledImages.js":"36","/home/user/Desktop/image_styler/frontend/src/components/StyledGallery/StyledGallery.js":"37","/home/user/Desktop/image_styler/frontend/src/components/Gallery/ModalHelpers/ShareModal.js":"38","/home/user/Desktop/image_styler/frontend/src/components/Gallery/ModalHelpers/FavoriteModal.js":"39","/home/user/Desktop/image_styler/frontend/src/requests/getActiveUsers.js":"40","/home/user/Desktop/image_styler/frontend/src/components/SharedGallery/SharedGallery.js":"41","/home/user/Desktop/image_styler/frontend/src/requests/getSharedImages.js":"42","/home/user/Desktop/image_styler/frontend/src/components/Navbar/BurgerNavBar.js":"43"},{"size":1457,"mtime":1612125458358,"results":"44","hashOfConfig":"45"},{"size":1562,"mtime":1612021744151,"results":"46","hashOfConfig":"45"},{"size":362,"mtime":1608163087752,"results":"47","hashOfConfig":"45"},{"size":439,"mtime":1610284719071,"results":"48","hashOfConfig":"45"},{"size":9108,"mtime":1612124397827,"results":"49","hashOfConfig":"45"},{"size":1088,"mtime":1612102800067,"results":"50","hashOfConfig":"45"},{"size":1956,"mtime":1612118158874,"results":"51","hashOfConfig":"45"},{"size":5310,"mtime":1612123312977,"results":"52","hashOfConfig":"45"},{"size":4615,"mtime":1612121782931,"results":"53","hashOfConfig":"45"},{"size":963,"mtime":1612102095819,"results":"54","hashOfConfig":"45"},{"size":772,"mtime":1610297531590,"results":"55","hashOfConfig":"45"},{"size":79,"mtime":1608819651043,"results":"56","hashOfConfig":"45"},{"size":676,"mtime":1608937668042,"results":"57","hashOfConfig":"45"},{"size":711,"mtime":1608932398305,"results":"58","hashOfConfig":"45"},{"size":1605,"mtime":1612119336554,"results":"59","hashOfConfig":"45"},{"size":4166,"mtime":1610399567422,"results":"60","hashOfConfig":"45"},{"size":1792,"mtime":1611506204680,"results":"61","hashOfConfig":"45"},{"size":1828,"mtime":1612119321992,"results":"62","hashOfConfig":"45"},{"size":4168,"mtime":1611506182364,"results":"63","hashOfConfig":"45"},{"size":1824,"mtime":1611506162840,"results":"64","hashOfConfig":"45"},{"size":2042,"mtime":1612024915461,"results":"65","hashOfConfig":"45"},{"size":274,"mtime":1610296956706,"results":"66","hashOfConfig":"45"},{"size":248,"mtime":1610293782126,"results":"67","hashOfConfig":"45"},{"size":388,"mtime":1610296582313,"results":"68","hashOfConfig":"45"},{"size":286,"mtime":1610296504565,"results":"69","hashOfConfig":"45"},{"size":2769,"mtime":1612124165444,"results":"70","hashOfConfig":"45"},{"size":7732,"mtime":1611954242600,"results":"71","hashOfConfig":"45"},{"size":2903,"mtime":1612122529898,"results":"72","hashOfConfig":"45"},{"size":2319,"mtime":1611955375554,"results":"73","hashOfConfig":"45"},{"size":2092,"mtime":1612125699910,"results":"74","hashOfConfig":"45"},{"size":1109,"mtime":1612124576745,"results":"75","hashOfConfig":"45"},{"size":1129,"mtime":1612125876446,"results":"76","hashOfConfig":"45"},{"size":446,"mtime":1611507864525,"results":"77","hashOfConfig":"45"},{"size":455,"mtime":1611615186993,"results":"78","hashOfConfig":"45"},{"size":1316,"mtime":1611790808443,"results":"79","hashOfConfig":"45"},{"size":459,"mtime":1611788894428,"results":"80","hashOfConfig":"45"},{"size":1848,"mtime":1612020777910,"results":"81","hashOfConfig":"45"},{"size":4147,"mtime":1612018662792,"results":"82","hashOfConfig":"45"},{"size":1721,"mtime":1612124815136,"results":"83","hashOfConfig":"45"},{"size":457,"mtime":1612015587296,"results":"84","hashOfConfig":"45"},{"size":3474,"mtime":1612024579042,"results":"85","hashOfConfig":"45"},{"size":459,"mtime":1612021758611,"results":"86","hashOfConfig":"45"},{"size":2458,"mtime":1612120814268,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"2yq4p8",{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"92"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"92"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"92"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"92"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"92"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"92"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"92"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"92"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"92"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"92"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"92"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/user/Desktop/image_styler/frontend/src/index.js",["187"],"/home/user/Desktop/image_styler/frontend/src/App.js",[],["188","189"],"/home/user/Desktop/image_styler/frontend/src/reportWebVitals.js",[],"/home/user/Desktop/image_styler/frontend/src/components/Main.js",["190"],"import React from 'react'\nimport NavBar from \"./Navbar/NavBar\"\nimport BodyMain from \"./BodyMain/BodyMain\"\nimport { mainAnimate } from \"../variants\"\nimport { motion } from 'framer-motion'\n\n\nexport default function Main() {\n\n\n    return (\n        <motion.div\n            variants={mainAnimate}\n            initial=\"hidden\"\n            animate=\"show\"\n            exit=\"hidden\"\n        >\n            <BodyMain />\n        </motion.div>\n    )\n}\n","/home/user/Desktop/image_styler/frontend/src/components/StylerApp/StylerApp.js",["191","192","193","194","195","196","197","198","199"],"/home/user/Desktop/image_styler/frontend/src/components/StylerApp/Confirm.js",["200","201","202"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport plusImg from '../../images/static/plus.png'\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    confirmLayout: {\n        width: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        height: \"539px\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        marginTop:\"2rem\",\n        \"& img\": {\n            marginBottom:\"2rem\",\n        },\n        '@media (max-height: 790px)': {\n            height: \"400px\"\n        },\n    },\n    imageStyle:{\n        maxWidth: \"300px\",\n        maxHeight: \"180px\",\n        borderRadius: \"4%\",\n        '@media (max-height: 790px)': {\n            height: \"130px\"\n        },\n    },\n  }));\n\n\nfunction Confirm(props) {\n    const classes = useStyles();\n    return (\n        <div className={classes.confirmLayout}>\n            <img className={classes.imageStyle} src={props.file.url}/>\n            <img src={plusImg}/>\n            <img className={classes.imageStyle} src={props.fileStyle.url}/>\n        </div>\n    );\n}\n\nexport default Confirm;","/home/user/Desktop/image_styler/frontend/src/components/StylerApp/Result.js",["203"],"/home/user/Desktop/image_styler/frontend/src/components/Navbar/NavBar.js",["204","205","206","207"],"/home/user/Desktop/image_styler/frontend/src/components/BodyMain/BodyMain.js",["208","209"],"/home/user/Desktop/image_styler/frontend/src/components/StylerApp/Features/DragnDrop.js",["210"],"import React from 'react'\nimport {DropzoneArea} from 'material-ui-dropzone'\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\n\n\nfunction DragnDrop(props) {\n    const widthChange = useMediaQuery('(min-width:480px)');\n\n    function handleChange(file){\n        if (file.length != 0) {\n            props.setFile({\"file\":file[0],\"url\":URL.createObjectURL(file[0])});\n        }\n      }\n    \n    const dragndropWidth = widthChange ? \"30rem\": \"100%\"\n\n    return (\n        <div style={{display:\"flex\", flexDirection:\"column\", width: dragndropWidth,marginTop:\"1rem\",marginBottom:\"1rem\", height:\"150px\"}}>\n            <DropzoneArea \n                acceptedFiles={['image/jpeg', 'image/png', 'image/bmp']}\n                maxFileSize={3000000}\n                showPreviewsInDropzone={false}\n                filesLimit={1}\n                onChange={handleChange.bind()}\n                height=\"100%\"\n        />\n\n        </div>\n    );\n}\n\nexport default DragnDrop;\n","/home/user/Desktop/image_styler/frontend/src/components/Navbar/NavBarItem.js",[],"/home/user/Desktop/image_styler/frontend/src/constants.js",[],"/home/user/Desktop/image_styler/frontend/src/variants.js",[],"/home/user/Desktop/image_styler/frontend/src/components/Trying.js",["211","212","213"],"import React, {useState} from 'react';\nimport { motion, AnimatePresence,AnimateSharedLayout } from 'framer-motion'\nimport { stylerStateAnimate } from '../variants'\nimport { ChangeHistory } from '@material-ui/icons';\n\nfunction Trying(props) {\n    const [state, setstate] = useState(true)\n\n    function changeState(){\n        setstate(!state)\n    }\n\n    return (\n        <div style={{margin:\"auto\"}}>\n            <AnimatePresence>\n        {state && (\n\n            <motion.h1 style={{color:\"white\"}}\n            exit={{ x: 2000}}\n            >Order</motion.h1>\n        )}\n           \n    </AnimatePresence>\n\n    <button onClick={changeState}>ab</button>\n            \n        </div>\n    );\n}\n\nexport default Trying;","/home/user/Desktop/image_styler/frontend/src/components/RegisterModal/RegisterModal.js",[],"/home/user/Desktop/image_styler/frontend/src/components/RegisterModal/RegisterForm.js",["214","215","216"],"import React, {useState} from 'react';\nimport { TextField } from 'formik-material-ui';\nimport { Button, Typography } from '@material-ui/core';\nimport { Formik, Form, Field } from 'formik';\nimport {API_URL} from '../../constants'\nimport axios from 'axios'\n\n\n\nfunction RegisterForm(props) {\n    const [infoMessage, setInfoMessage] = useState({\"color\":\"\",\"message\":\"\"});\n\n    return (\n            <Formik\n            initialValues={{\n                email: '',\n                password: '',\n                re_password: '',\n              }}\n            validate={values => {\n            const errors = {}\n            if (!values.email) {\n                errors.email = 'Required';\n            } else if (\n                !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\n            ) {\n                errors.email = 'Invalid email address';\n            }\n            if (!values.password) {\n                errors.password = 'Required';\n            } else if (values.password.length < 6){\n                errors.password = 'Must be at least 6 characters'\n            }\n            if (!values.re_password){\n                errors.re_password = 'Required';\n            } else if (values.re_password.length < 6){\n                errors.re_password = 'Must be at least 6 characters'\n            }\n            else if (values.password != values.re_password){\n                errors.re_password = 'Re-password didnt match'\n            }\n\n            return errors;\n            }}\n            \n            onSubmit={(values, { setSubmitting }) => {\n                setSubmitting(false);\n                \n                axios.post(`${API_URL}/api/auth/users/`, values)\n                    .then(response => {   \n                        setInfoMessage({\"color\":\"green\",\"message\":\"An email has been sent to your email address containing an activation link. Please click on the link to activate your account.\"})\n                    })\n                .catch(error => {\n                    try {\n                        if (error.response.data.email[0] === \"user with this email address already exists.\")\n                        {\n                            setInfoMessage({\"color\":\"red\",\"message\":\"User with this email address already exist.\"})\n                        }\n                    }\n                    catch (e) {\n                        console.log(error.response)\n                        console.log(error.response.status)\n                        if (error.response.status === 500){\n                        setInfoMessage({\"color\":\"red\",\"message\":\"API is down please try again after few minutes\"})\n                        }\n                }\n                });\n              }}\n            >\n            {({ submitForm, isSubmitting }) => (\n            <form onSubmit={e => { e.preventDefault(); submitForm(e) }} autoComplete=\"off\" style={{display:\"flex\", flexDirection:\"column\", marginTop:\"2rem\"}}>\n                <Field\n                component={TextField}\n                name=\"email\"\n                type=\"email\"\n                label=\"Email\"\n                required\n                style={{marginBottom:\"0.2rem\"}}\n                />\n                <Field\n                component={TextField}\n                type=\"password\"\n                label=\"Password\"\n                name=\"password\"\n                required\n                style={{marginBottom:\"0.2rem\"}}\n                />\n                <Field\n                component={TextField}\n                type=\"password\"\n                label=\"Re-password\"\n                name=\"re_password\"\n                required\n                />\n                <div style={{maxWidth:\"210px\"}}>\n                <Typography style={{marginTop:\"2rem\",color:infoMessage.color, marginTop:\"1rem\"}} variant=\"p\" component=\"p\">\n                    {infoMessage.message}\n                </Typography>\n                </div>\n\n                <Button type=\"submit\" variant=\"contained\" color=\"secondary\" style={{marginTop:\"1.2rem\", marginBottom:\"0.2rem\"}}>\n                    Register\n                </Button>\n            </form>\n            )}\n            </Formik>\n    );\n}\n\nexport default RegisterForm;","/home/user/Desktop/image_styler/frontend/src/components/UserActivation/UserActivation.js",[],"/home/user/Desktop/image_styler/frontend/src/components/LoginModal/LoginModal.js",[],"/home/user/Desktop/image_styler/frontend/src/components/LoginModal/LoginForm.js",["217","218","219"],"import React, {useState} from 'react';\nimport { TextField } from 'formik-material-ui';\nimport { Button, Typography } from '@material-ui/core';\nimport { Formik, Form, Field } from 'formik';\nimport {API_URL} from '../../constants'\nimport axios from 'axios'\nimport { useDispatch  } from 'react-redux'\nimport {LogIn, LogOut} from \"../../redux/actions\"\n\n\n\n\nfunction checkIfUserIsActive(handleClose,email,setInfoMessage,values,dispatch){\n    const data = {\"email\":email}\n    axios.post(`${API_URL}/api/activation_check/`,data)\n    .then(response => {   \n        if (response.data.user_is_active === false){\n            setInfoMessage(\"User is not active, Please check your emails and activate user by click on activate link\")\n        }\n        else{\n            // User is active \n            LogInUser(handleClose,values,setInfoMessage,dispatch)\n        }\n    })\n.catch(error => {\n    console.log(error.response)\n    if (error.response.status === 404){\n        setInfoMessage(\"Email does not exist.\")\n    }\n    else {\n        console.log(error.response)\n        setInfoMessage(\"Error try it again after a few minutes\")\n    }\n})\n}\n\nasync function LogInUser(handleClose,values,setInfoMessage,dispatch){\n\n    await axios.post(`${API_URL}/api/auth/jwt/create`, values)\n    .then(response => {  \n        handleClose()\n        localStorage.clear()\n        localStorage.setItem('token',response.data.access)\n        localStorage.setItem('refresh_token',response.data.refresh)\n        axios.defaults.headers.common['Authorization'] = 'Bearer ' + localStorage.getItem('token')\n        dispatch(LogIn())\n    })\n    .catch(error => {\n    console.log(error)\n    if (error.response.status >= 400 && error.response.status < 500){\n            setInfoMessage(\"Wrong credentials\")\n    }\n    else {\n        setInfoMessage(\"Error try it again after a few minutes\")\n    }\n    });\n    \n}\n\n\nfunction LoginForm(props) {\n    const [infoMessage, setInfoMessage] = useState(\"\");\n    const dispatch = useDispatch()\n\n    return (\n            <Formik\n            initialValues={{\n                email: '',\n                password: '',\n              }}\n            validate={values => {\n            const errors = {}\n            if (!values.email) {\n                errors.email = 'Required';\n            } else if (\n                !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\n            ) {\n                errors.email = 'Invalid email address';\n            }\n            if (!values.password) {\n                errors.password = 'Required';\n            } else if (values.password.length < 6){\n                errors.password = 'Must be at least 6 characters'\n            }\n\n            return errors;\n            }}\n            \n            onSubmit={(values, { setSubmitting }) => {\n                setSubmitting(false);\n                checkIfUserIsActive(props.handleClose,values.email,setInfoMessage,values,dispatch)\n              }}\n            >\n            {({ submitForm, isSubmitting }) => (\n            <form onSubmit={e => { e.preventDefault(); submitForm(e) }} autoComplete=\"off\" style={{display:\"flex\", flexDirection:\"column\", marginTop:\"2rem\"}}>\n                <Field\n                component={TextField}\n                name=\"email\"\n                type=\"email\"\n                label=\"Email\"\n                required\n                style={{marginBottom:\"0.2rem\"}}\n                />\n                <Field\n                component={TextField}\n                type=\"password\"\n                label=\"Password\"\n                name=\"password\"\n                required\n                style={{marginBottom:\"0.2rem\"}}\n                />\n\n                <div style={{maxWidth:\"210px\"}}>\n                <Typography style={{marginTop:\"2rem\",color:\"red\", marginTop:\"1rem\"}} variant=\"p\" component=\"p\">\n                    {infoMessage}\n                </Typography>\n                </div>\n\n                <Button type=\"submit\" variant=\"contained\" color=\"secondary\"  style={{marginTop:\"1.2rem\", marginBottom:\"0.2rem\"}}>\n                    Sign in\n                </Button>\n            </form>\n            )}\n            </Formik>\n    );\n}\n\nexport default LoginForm;","/home/user/Desktop/image_styler/frontend/src/axiosTokenHandle.js",[],"/home/user/Desktop/image_styler/frontend/src/components/Gallery/Gallery.js",["220","221","222"],"import React, {useEffect, useState} from 'react';\nimport { Grid, Button, Typography } from '@material-ui/core';\nimport { useDispatch  } from 'react-redux'\nimport { LogOut, OpenLoginDialog} from \"../../redux/actions\"\nimport AddImageModal from \"./AddImageModal\"\nimport GalleryCard from \"./GalleryCard\"\nimport Box from '@material-ui/core/Box';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {getImages} from \"../../requests/getImages\"\n\nconst useStyles = makeStyles((theme) => ({\n    mainGalleryCards: {\n        display:\"flex\",\n        justifyContent: \"center\",\n        marginTop: \"3rem\",\n        width:\"100%\"\n    },\n    galleryCards:{\n        width:\"80%\",\n    }\n    }));\n\nfunction Gallery(props) {\n    const classes = useStyles();\n    const dispatch = useDispatch()\n    const [images,setImages] = useState([])\n\n    useEffect(async() => {\n        const result = await getImages()\n\n        if (result === false) {\n            dispatch(OpenLoginDialog())\n            dispatch(LogOut())\n        }\n        else{\n            setImages(result)\n        }\n        \n        },[]);\n\n    return (\n        <div style={{display:\"flex\",flexDirection:\"column\",marginTop:\"2rem\", marginBottom:\"1rem\",alignItems:\"center\"}}>\n             <AddImageModal setImages={setImages} images={images}/>\n             <Typography color=\"primary\" variant=\"h6\" style={{marginTop:\"1.5rem\"}}>\n                A maximum of 10 images is allowed\n             </Typography>\n             <Typography color=\"primary\" variant=\"h6\" style={{marginTop:\"0.2rem\"}}>\n                Images are ordered by favorites\n             </Typography>\n            <div className={classes.mainGalleryCards}>\n                <Box className={classes.galleryCards}>\n                <Grid container direction=\"row\" justify=\"center\" alignItems=\"flex-start\" spacing={3}>\n                    {images.map((item,i) => <GalleryCard data={item} setImages={setImages} images={images}/>)}\n                </Grid>\n                </Box>\n            </div>\n        </div>\n    );\n}\n\nexport default Gallery;","/home/user/Desktop/image_styler/frontend/src/redux/reducers/index.js",[],"/home/user/Desktop/image_styler/frontend/src/redux/reducers/logged.js",[],"/home/user/Desktop/image_styler/frontend/src/redux/actions/index.js",[],"/home/user/Desktop/image_styler/frontend/src/redux/reducers/openLoginDialog.js",[],"/home/user/Desktop/image_styler/frontend/src/components/Gallery/AddImageModal.js",["223","224"],"/home/user/Desktop/image_styler/frontend/src/components/Gallery/AddImageForm.js",["225"],"import React, {useState} from 'react';\nimport { TextField } from 'formik-material-ui';\nimport { Button, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Formik, Field } from 'formik';\nimport { CheckboxWithLabel } from 'formik-material-ui';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {axiosApiInstance} from \"../../axiosTokenHandle\"\nimport {API_URL} from '../../constants'\nimport { useDispatch  } from 'react-redux'\nimport { LogOut, OpenLoginDialog} from \"../../redux/actions\"\nimport {getImages} from \"../../requests/getImages\"\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    formInput: {\n        marginBottom: \"0.2rem\",\n        }\n  }));\n\nfunction AddImageForm(props) {\n    const dispatch = useDispatch()\n    const classes = useStyles();\n    const [imageNameValue, setImageNameValue] = useState(\"\")\n    const [imageDescrValue, setImageDescrValue] = useState(\"\")\n    const [imageFile, setImageFile] = useState(null)\n    const [userShares,setUserShares] = useState([])\n    const [errorMessage, setErrorMessage] = useState(\"\")\n\n    function handleChange (name,event) {\n        if (name === \"imageName\") {\n            setImageNameValue(event.target.value)\n        }\n        else if (name === \"imageDescription\") {\n            setImageDescrValue(event.target.value)\n        }\n      };\n\n    const usersList=props.userList\n   \n    return (\n        <Formik\n            initialValues={{\n                imageWidth: \"\",\n                imageHeight: \"\",\n              }}\n            validate={values => {\n            const errors = {}\n            \n            if (values.imageWidth !== \"\"){\n                const widthNum = Number(values.imageWidth)\n                if (!Number.isInteger(widthNum)){\n                    errors.imageWidth = \"Width can be only number\"\n                }\n                if (widthNum > 400 || widthNum < 20){\n                    errors.imageWidth = \"Width must be between 20-400\"\n                }\n            }\n            if (values.imageHeight !== \"\"){\n                const heightNum = Number(values.imageHeight)\n                if (!Number.isInteger(heightNum)){\n                    errors.imageHeight = \"Height can be only number\"\n                }\n                if (heightNum > 400 || heightNum < 20){\n                    errors.imageHeight = \"HeightWidth must be between 20-400\"\n                }\n            }\n            \n            return errors;\n            }}\n            \n            onSubmit={async (values, { setSubmitting }) => {\n                setSubmitting(false);\n                \n                const formData = new FormData();\n                // Input all share user IDs to form data\n                userShares.map((item) => {\n                    formData.append(\"share_user\",item.id)\n                })\n                formData.append(\"img_name\",imageNameValue)\n                formData.append(\"img_description\",imageDescrValue)\n                formData.append(\"uploaded_image\",imageFile)\n                formData.append(\"width\",Number(values.imageWidth))\n                formData.append(\"height\",Number(values.imageHeight))\n                formData.append(\"favourite\",values.favourite === undefined ? false : values.favourite)\n                \n                try {\n                    const result = await axiosApiInstance.post(`${API_URL}/api/images/`,formData)\n                        if (!result){\n                            dispatch(OpenLoginDialog())\n                            dispatch(LogOut())\n                        }\n                        else{\n                            // update images with new added image\n                            const result = await getImages()\n                            props.setImages(result)\n                            props.handleClose()\n                        }\n                }\n                    catch (e) {\n                        if (Object.keys(e.response.data).length > 0){\n                            const first_message = Object.keys(e.response.data)[0]\n                            setErrorMessage(e.response.data[first_message])\n                        }\n                        console.log(e)\n                    }\n              }}\n            >\n            {({ submitForm, isSubmitting }) => (\n            <form onSubmit={e => { e.preventDefault(); submitForm(e) }} autoComplete=\"off\" style={{display:\"flex\", flexDirection:\"column\", marginTop:\"2rem\"}}>\n                <Field\n                component={TextField}\n                name=\"imageName\"\n                required\n                label=\"Image Name\"\n                className={classes.formInput}\n                helperText={`${imageNameValue.length}/${15}`}\n                inputProps={{\n                    maxLength: 15\n                  }}\n                onChange={(e) => handleChange(\"imageName\", e)}\n                />\n                <Field\n                component={TextField}\n                name=\"imageDescription\"\n                label=\"Image description\"\n                multiline\n                rowsMax={2}\n                className={classes.formInput}\n                helperText={`${imageDescrValue.length}/${25}`}\n                inputProps={{\n                    maxLength: 25\n                  }}\n                onChange={(e) => handleChange(\"imageDescription\", e)}\n                />\n                <Field\n                component={CheckboxWithLabel}\n                type=\"checkbox\"\n                name=\"favourite\"\n                Label={{ label: 'Favourite' }}\n                >\n                </Field>\n                <Field\n                component={TextField}\n                name=\"imageWidth\"\n                label=\"Width\"\n                className={classes.formInput}\n                helperText=\"Max width is 400px\"\n                />\n                <Field\n                component={TextField}\n                name=\"imageHeight\"\n                label=\"Height\"\n                className={classes.formInput}\n                helperText=\"Max Height is 400px\"\n                />\n                <Autocomplete\n                style={{width: \"217px\",maxHeight:\"120px\"}}\n                multiple\n                limitTags={1}\n                options={usersList}\n                getOptionLabel={(option) => option.email}\n                onChange={(event, value) => setUserShares(value.slice(-2))}\n                value = {userShares}\n                renderInput={(params) => (\n                <Field \n                component={TextField}\n                {...params}\n                name=\"userShare\"\n                rowsMax={2}\n                size=\"small\"\n                label=\"User shares (Max 2 users)\"\n                helperText=\"Share image with other users\"\n                className={classes.formInput}\n                 />\n                 \n                )}/>\n                <Typography style={{marginTop:\"0.7rem\"}} component=\"p\">\n                    Select image (jpg, jpeg)\n                </Typography>\n                <input required id=\"file\" name=\"file\" type=\"file\" accept=\".jpeg,.jpg\" className={classes.formInput} style={{maxWidth:\"225px\"}} onChange={(e) => \n                    setImageFile(e.currentTarget.files[0])}/>\n\n                <div style={{maxWidth:\"210px\"}}>\n                </div>\n                <Typography style={{marginTop:\"0.7rem\",color:\"red\", maxWidth:\"217px\"}} component=\"p\">\n                    {errorMessage}\n                </Typography>\n\n                <Button type=\"submit\" variant=\"contained\" color=\"secondary\"  style={{marginTop:\"1.2rem\", marginBottom:\"0.2rem\"}}>\n                    Confirm\n                </Button>\n            </form>\n            )}\n            </Formik>\n    );\n}\n\nexport default AddImageForm;","/home/user/Desktop/image_styler/frontend/src/components/Gallery/GalleryCard.js",[],"/home/user/Desktop/image_styler/frontend/src/components/Gallery/ModalHelpers/DeleteModal.js",[],"/home/user/Desktop/image_styler/frontend/src/components/StylerApp/Features/GalleryImageModal/GallerySelectModal.js",[],"/home/user/Desktop/image_styler/frontend/src/components/StylerApp/Features/GalleryImageModal/GalleryImagesModal.js",["226","227"],"/home/user/Desktop/image_styler/frontend/src/components/StylerApp/Features/GalleryImageModal/GalleryImageModal.js",[],"/home/user/Desktop/image_styler/frontend/src/requests/getImages.js",[],"/home/user/Desktop/image_styler/frontend/src/requests/getUsers.js",[],["228","229"],"/home/user/Desktop/image_styler/frontend/src/components/StylerApp/Features/StylerForm.js",[],"/home/user/Desktop/image_styler/frontend/src/requests/getStyledImages.js",[],"/home/user/Desktop/image_styler/frontend/src/components/StyledGallery/StyledGallery.js",["230","231"],"import React, {useEffect, useState} from 'react';\nimport { Grid, Typography} from '@material-ui/core';\nimport { useDispatch  } from 'react-redux'\nimport { LogOut, OpenLoginDialog} from \"../../redux/actions\"\nimport Box from '@material-ui/core/Box';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {getStyledImages} from \"../../requests/getStyledImages\"\nimport GalleryCard from \"../Gallery/GalleryCard\"\n\nconst useStyles = makeStyles((theme) => ({\n    mainGalleryCards: {\n        display:\"flex\",\n        justifyContent: \"center\",\n        marginTop: \"3rem\",\n        width:\"100%\"\n    },\n    galleryCards:{\n        width:\"80%\",\n    }\n    }));\n\nfunction StyledGallery(props) {\n    const classes = useStyles();\n    const dispatch = useDispatch()\n    const [styledImages,setStyledImages] = useState([])\n\n    useEffect(async() => {\n        const result = await getStyledImages()\n\n        if (result === false) {\n            dispatch(OpenLoginDialog())\n            dispatch(LogOut())\n        }\n        else{\n            setStyledImages(result)\n        }\n        },[]);\n\n    return (\n        <div style={{display:\"flex\",flexDirection:\"column\",marginTop:\"2rem\", marginBottom:\"1rem\",alignItems:\"center\"}}>\n            <Typography color=\"primary\" variant=\"h6\" style={{marginTop:\"0.5rem\"}}>\n                Images are ordered by favorites\n             </Typography>\n            <div className={classes.mainGalleryCards}>\n                <Box className={classes.galleryCards}>\n                <Grid container direction=\"row\" justify=\"center\" alignItems=\"flex-start\" spacing={3}>\n                    {styledImages.map((item,i) => <GalleryCard data={item} setImages={setStyledImages} images={styledImages} styledComponent={true}/>)}\n                </Grid>\n                </Box>\n            </div>\n        </div>\n    );\n}\n\nexport default StyledGallery;","/home/user/Desktop/image_styler/frontend/src/components/Gallery/ModalHelpers/ShareModal.js",["232","233","234"],"import React, {useState,useEffect} from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport ShareIcon from '@material-ui/icons/Share';\nimport {axiosApiInstance} from \"../../../axiosTokenHandle\"\nimport {API_URL} from \"../../../constants\"\nimport { useDispatch  } from 'react-redux'\nimport { LogOut, OpenLoginDialog} from \"../../../redux/actions\"\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport {getActiveUsers} from \"../../../requests/getActiveUsers\"\n\n\n\nexport default function ShareModal(props) {\n  const [open, setOpen] = React.useState(false);\n  const dispatch = useDispatch()\n  const [userShares,setUserShares] = useState([])\n  const [userList,setUserList] = useState([])\n\n  useEffect(async() => {\n\n    const result = await getActiveUsers()\n    if (!result){\n        dispatch(OpenLoginDialog())\n        dispatch(LogOut())\n    }\n    else {\n      setUserList(result)\n   }\n    \n    setUserShares(getAlreadySharedUsers(result))\n    \n},[]);\n\nfunction getAlreadySharedUsers(result){\n  // Get and set User shares which are already set for image\n  const shareUsersIdArray = props.data.share_user\n  const sharedUserEmails = result.filter(function(item){\n    if (shareUsersIdArray.includes(item.id)){\n      return true\n    }\n    return false\n  }).map(function(item) {return item})\n  return sharedUserEmails\n}\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const shareImage = async () => {\n    const imageUrl = props.styledComponent ? \"styled_images\" : \"images\"\n    const formData = new FormData();\n    // Input all share user IDs to form data\n    userShares.map((item) => {\n        formData.append(\"share_user\",item.id)\n    })\n    formData.append(\"img_name\",props.data.img_name)\n    \n    try {\n      const result = await axiosApiInstance.put(`${API_URL}/api/${imageUrl}/${props.data.id}`,formData)\n          if (!result){\n              dispatch(OpenLoginDialog())\n              dispatch(LogOut())\n          }\n     }\n      catch (e) {\n          console.log(e)\n      }\n\n    handleClose()\n    }\n\n  return (\n    <div style={{marginRight:\"0.8rem\"}}>\n      <ShareIcon onClick={handleClickOpen} style={{paddingTop:\"0.5rem\",cursor: \"pointer\",fontSize:\"1.8rem\"}}/>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogContent style={{marginTop:\"1rem\", maxWidth:\"300px\"}}>\n          <DialogContentText id=\"alert-dialog-description\">\n                Enter the active users you want to share this picture with or you can delete already shared users. Filled users are already shared.\n          </DialogContentText>\n        </DialogContent>\n\n        <Autocomplete\n                style={{width: \"217px\",maxHeight:\"120px\",margin:\"auto\"}}\n                multiple\n                limitTags={1}\n                options={userList}\n                getOptionLabel={(option) => option.email}\n                onChange={(event, value) => setUserShares(value.slice(-2))}\n                value = {userShares}\n                renderInput={(params) => (\n                <TextField \n                {...params}\n                name=\"userShare\"\n                rowsMax={2}\n                size=\"small\"\n                label=\"User shares (Max 2 users)\"\n                helperText=\"Share image with other users\"\n                 />\n                 \n        )}/>\n\n        <DialogActions style={{justifyContent:\"center\",marginTop:\"0.5rem\",marginBottom:\"1rem\"}}>\n          <Button onClick={handleClose} variant=\"contained\" color=\"secondary\">\n            Cancel\n          </Button>\n          <Button onClick={shareImage} variant=\"contained\" color=\"secondary\" autoFocus>\n            Confirm\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","/home/user/Desktop/image_styler/frontend/src/components/Gallery/ModalHelpers/FavoriteModal.js",[],"/home/user/Desktop/image_styler/frontend/src/requests/getActiveUsers.js",[],"/home/user/Desktop/image_styler/frontend/src/components/SharedGallery/SharedGallery.js",["235","236"],"import React, {useEffect, useState} from 'react';\nimport { Grid, Typography, Button} from '@material-ui/core';\nimport { useDispatch  } from 'react-redux'\nimport { LogOut, OpenLoginDialog} from \"../../redux/actions\"\nimport Box from '@material-ui/core/Box';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {getSharedImages} from \"../../requests/getSharedImages\"\nimport GalleryCard from \"../Gallery/GalleryCard\"\n\nconst useStyles = makeStyles((theme) => ({\n    mainGalleryCards: {\n        display:\"flex\",\n        justifyContent: \"center\",\n        marginTop: \"3rem\",\n        width:\"100%\"\n    },\n    galleryCards:{\n        width:\"80%\",\n    },\n    root: {\n        '&$disabled': {\n          backgroundColor: '#b8b8b8',\n        },\n      },\n      disabled: {},\n    }));\n\nfunction SharedGallery(props) {\n    const classes = useStyles();\n    const dispatch = useDispatch()\n    const [sharedImages,setSharedImages] = useState({})\n    const [showSharedImages, setShowSharedImages] = useState([])\n    const [styledImagesShowing,setStyledImagesShowing] = useState(false)\n\n    useEffect(async() => {\n        const result = await getSharedImages()\n\n        if (result === false) {\n            dispatch(OpenLoginDialog())\n            dispatch(LogOut())\n        }\n        else{\n            // get object with two keys images (basic images) and styled_images\n            setSharedImages(result)\n            // set basic images as default to show\n            setShowSharedImages(result.images)\n        }\n        },[]);\n    \n    function handleClickBasic(){\n        setShowSharedImages(sharedImages.images)\n        setStyledImagesShowing(false)\n\n    }\n    function handleClickStyled(){\n        setShowSharedImages(sharedImages.styled_images)\n        setStyledImagesShowing(true)\n        console.log(sharedImages.styled_images)\n    }\n\n    return (\n        <div style={{display:\"flex\",flexDirection:\"column\",marginTop:\"2rem\", marginBottom:\"1rem\",alignItems:\"center\"}}>\n            <Typography color=\"primary\" variant=\"h6\" style={{marginTop:\"0.5rem\"}}>\n                Images shared with you by other users\n             </Typography>\n            <div style={{display:\"flex\",marginTop:\"1rem\"}}>\n                <Button \n                classes={{\n                    root: classes.root,\n                    disabled: classes.disabled,\n                  }}\n                disabled={!styledImagesShowing}\n                variant=\"contained\" color=\"secondary\" style={{fontSize:\"1.1rem\",marginRight:\"0.5rem\",width:\"100px\"}} onClick={handleClickBasic}>Basic</Button> \n                <Button \n                classes={{\n                    root: classes.root,\n                    disabled: classes.disabled,\n                  }}\n                  disabled={styledImagesShowing}\n                variant=\"contained\" color=\"secondary\" style={{fontSize:\"1.1rem\",width:\"100px\"}} onClick={handleClickStyled}>Styled</Button> \n            </div>\n            <div className={classes.mainGalleryCards}>\n                <Box className={classes.galleryCards}>\n                <Grid container direction=\"row\" justify=\"center\" alignItems=\"flex-start\" spacing={3}>\n                    {showSharedImages.map((item,i) => <GalleryCard data={item} setImages={setShowSharedImages} images={showSharedImages}\n                    styledComponent={styledImagesShowing} shareComponent={true}/>)}\n                </Grid>\n                </Box>\n            </div>\n        </div>\n    );\n}\n\nexport default SharedGallery;","/home/user/Desktop/image_styler/frontend/src/requests/getSharedImages.js",[],"/home/user/Desktop/image_styler/frontend/src/components/Navbar/BurgerNavBar.js",[],{"ruleId":"237","severity":1,"message":"238","line":8,"column":9,"nodeType":"239","messageId":"240","endLine":8,"endColumn":16},{"ruleId":"241","replacedBy":"242"},{"ruleId":"243","replacedBy":"244"},{"ruleId":"237","severity":1,"message":"245","line":2,"column":8,"nodeType":"239","messageId":"240","endLine":2,"endColumn":14},{"ruleId":"237","severity":1,"message":"246","line":12,"column":18,"nodeType":"239","messageId":"240","endLine":12,"endColumn":33},{"ruleId":"237","severity":1,"message":"247","line":12,"column":34,"nodeType":"239","messageId":"240","endLine":12,"endColumn":53},{"ruleId":"237","severity":1,"message":"248","line":13,"column":10,"nodeType":"239","messageId":"240","endLine":13,"endColumn":21},{"ruleId":"237","severity":1,"message":"249","line":20,"column":10,"nodeType":"239","messageId":"240","endLine":20,"endColumn":24},{"ruleId":"250","severity":1,"message":"251","line":62,"column":15,"nodeType":"252","endLine":79,"endColumn":6},{"ruleId":"253","severity":1,"message":"254","line":74,"column":22,"nodeType":"255","messageId":"256","endLine":74,"endColumn":30},{"ruleId":"250","severity":1,"message":"257","line":79,"column":7,"nodeType":"258","endLine":79,"endColumn":9,"suggestions":"259"},{"ruleId":"260","severity":1,"message":"261","line":128,"column":40,"nodeType":"262","endLine":128,"endColumn":145},{"ruleId":"260","severity":1,"message":"261","line":134,"column":45,"nodeType":"262","endLine":134,"endColumn":155},{"ruleId":"260","severity":1,"message":"261","line":38,"column":13,"nodeType":"262","endLine":38,"endColumn":71},{"ruleId":"260","severity":1,"message":"261","line":39,"column":13,"nodeType":"262","endLine":39,"endColumn":33},{"ruleId":"260","severity":1,"message":"261","line":40,"column":13,"nodeType":"262","endLine":40,"endColumn":76},{"ruleId":"260","severity":1,"message":"261","line":44,"column":21,"nodeType":"262","endLine":44,"endColumn":82},{"ruleId":"237","severity":1,"message":"263","line":1,"column":16,"nodeType":"239","messageId":"240","endLine":1,"endColumn":24},{"ruleId":"250","severity":1,"message":"251","line":49,"column":15,"nodeType":"252","endLine":76,"endColumn":10},{"ruleId":"250","severity":1,"message":"264","line":76,"column":11,"nodeType":"258","endLine":76,"endColumn":13,"suggestions":"265"},{"ruleId":"237","severity":1,"message":"266","line":89,"column":21,"nodeType":"239","messageId":"240","endLine":89,"endColumn":27},{"ruleId":"237","severity":1,"message":"267","line":101,"column":11,"nodeType":"239","messageId":"240","endLine":101,"endColumn":24},{"ruleId":"268","severity":1,"message":"269","line":119,"column":32,"nodeType":"270","endLine":119,"endColumn":36},{"ruleId":"271","severity":1,"message":"272","line":11,"column":25,"nodeType":"273","messageId":"274","endLine":11,"endColumn":27},{"ruleId":"237","severity":1,"message":"247","line":2,"column":34,"nodeType":"239","messageId":"240","endLine":2,"endColumn":53},{"ruleId":"237","severity":1,"message":"275","line":3,"column":10,"nodeType":"239","messageId":"240","endLine":3,"endColumn":28},{"ruleId":"237","severity":1,"message":"276","line":4,"column":10,"nodeType":"239","messageId":"240","endLine":4,"endColumn":23},{"ruleId":"237","severity":1,"message":"277","line":4,"column":18,"nodeType":"239","messageId":"240","endLine":4,"endColumn":22},{"ruleId":"271","severity":1,"message":"272","line":39,"column":38,"nodeType":"273","messageId":"274","endLine":39,"endColumn":40},{"ruleId":"278","severity":1,"message":"279","line":96,"column":79,"nodeType":"280","messageId":"274","endLine":96,"endColumn":88},{"ruleId":"237","severity":1,"message":"277","line":4,"column":18,"nodeType":"239","messageId":"240","endLine":4,"endColumn":22},{"ruleId":"237","severity":1,"message":"281","line":8,"column":16,"nodeType":"239","messageId":"240","endLine":8,"endColumn":22},{"ruleId":"278","severity":1,"message":"279","line":114,"column":67,"nodeType":"280","messageId":"274","endLine":114,"endColumn":76},{"ruleId":"237","severity":1,"message":"282","line":2,"column":16,"nodeType":"239","messageId":"240","endLine":2,"endColumn":22},{"ruleId":"250","severity":1,"message":"251","line":28,"column":15,"nodeType":"252","endLine":39,"endColumn":10},{"ruleId":"250","severity":1,"message":"264","line":39,"column":11,"nodeType":"258","endLine":39,"endColumn":13,"suggestions":"283"},{"ruleId":"250","severity":1,"message":"251","line":64,"column":13,"nodeType":"252","endLine":78,"endColumn":2},{"ruleId":"250","severity":1,"message":"264","line":78,"column":3,"nodeType":"258","endLine":78,"endColumn":5,"suggestions":"284"},{"ruleId":"253","severity":1,"message":"285","line":78,"column":39,"nodeType":"252","messageId":"256","endLine":78,"endColumn":41},{"ruleId":"250","severity":1,"message":"251","line":14,"column":15,"nodeType":"252","endLine":25,"endColumn":10},{"ruleId":"250","severity":1,"message":"264","line":25,"column":11,"nodeType":"258","endLine":25,"endColumn":13,"suggestions":"286"},{"ruleId":"241","replacedBy":"287"},{"ruleId":"243","replacedBy":"288"},{"ruleId":"250","severity":1,"message":"251","line":27,"column":15,"nodeType":"252","endLine":37,"endColumn":10},{"ruleId":"250","severity":1,"message":"264","line":37,"column":11,"nodeType":"258","endLine":37,"endColumn":13,"suggestions":"289"},{"ruleId":"250","severity":1,"message":"251","line":24,"column":13,"nodeType":"252","endLine":37,"endColumn":2},{"ruleId":"250","severity":1,"message":"290","line":37,"column":3,"nodeType":"258","endLine":37,"endColumn":5,"suggestions":"291"},{"ruleId":"253","severity":1,"message":"285","line":63,"column":27,"nodeType":"252","messageId":"256","endLine":63,"endColumn":29},{"ruleId":"250","severity":1,"message":"251","line":35,"column":15,"nodeType":"252","endLine":48,"endColumn":10},{"ruleId":"250","severity":1,"message":"264","line":48,"column":11,"nodeType":"258","endLine":48,"endColumn":13,"suggestions":"292"},"no-unused-vars","'API_URL' is defined but never used.","Identifier","unusedVar","no-native-reassign",["293"],"no-negated-in-lhs",["294"],"'NavBar' is defined but never used.","'AnimatePresence' is defined but never used.","'AnimateSharedLayout' is defined but never used.","'demoAnimate' is defined but never used.","'ContactSupport' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","array-callback-return","Array.prototype.map() expects a return value from function.","FunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'history' and 'isLogged'. Either include them or remove the dependency array.","ArrayExpression",["295"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["296"],"'images' is defined but never used.","'hideExtraText' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'stylerStateAnimate' is defined but never used.","'ChangeHistory' is defined but never used.","'Form' is defined but never used.","no-dupe-keys","Duplicate key 'marginTop'.","ObjectExpression","'LogOut' is defined but never used.","'Button' is defined but never used.",["297"],["298"],"Array.prototype.map() expects a return value from arrow function.",["299"],["293"],["294"],["300"],"React Hook useEffect has missing dependencies: 'dispatch' and 'getAlreadySharedUsers'. Either include them or remove the dependency array.",["301"],["302"],"no-global-assign","no-unsafe-negation",{"desc":"303","fix":"304"},{"desc":"305","fix":"306"},{"desc":"305","fix":"307"},{"desc":"305","fix":"308"},{"desc":"305","fix":"309"},{"desc":"305","fix":"310"},{"desc":"311","fix":"312"},{"desc":"305","fix":"313"},"Update the dependencies array to be: [history, isLogged]",{"range":"314","text":"315"},"Update the dependencies array to be: [dispatch]",{"range":"316","text":"317"},{"range":"318","text":"317"},{"range":"319","text":"317"},{"range":"320","text":"317"},{"range":"321","text":"317"},"Update the dependencies array to be: [dispatch, getAlreadySharedUsers]",{"range":"322","text":"323"},{"range":"324","text":"317"},[2661,2663],"[history, isLogged]",[2470,2472],"[dispatch]",[1078,1080],[2162,2164],[685,687],[1067,1069],[1252,1254],"[dispatch, getAlreadySharedUsers]",[1506,1508]]